{"version":3,"sources":["../src/battle-dex.ts"],"names":["window","global","exports","nodewebkit","process","versions","toID","text","id","userid","toLowerCase","replace","toUserid","PSUtils","splitFirst","str","delimiter","limit","splitStr","length","delimiterIndex","indexOf","push","slice","compare","a","b","localeCompare","Array","isArray","i","comparison","reverse","Error","sortBy","array","callback","sort","toRoomid","roomid","toName","name","trim","substr","Dex","gen","modid","cache","statNames","statNamesExceptHP","pokeballs","resourcePrefix","prefix","document","location","protocol","fxPrefix","loadedSpriteData","xy","bw","moddedDexes","moves","get","nameOrMove","BattleAliases","BattleMovedex","data","exists","exec","hpWithType","hpPower","basePower","Number","move","Move","items","nameOrItem","BattleItems","item","Item","abilities","nameOrAbility","BattleAbilities","ability","Ability","species","nameOrSpecies","formid","BattlePokedexAltForms","BattlePokedex","BattleBaseSpeciesChart","baseSpeciesId","startsWith","tier","baseSpecies","Species","cosmeticFormes","forme","baseForme","otherFormes","types","allCache","type","toUpperCase","BattleTypeChart","damageTaken","effectType","all","isName","hasOwnProperty","mod","BattleTeambuilderTable","ModdedDex","forGen","resolveAvatar","avatar","BattleAvatarNumbers","charAt","includes","Config","server","registered","port","host","encodeURIComponent","sanitizeName","prefs","prop","Storage","getShortName","shortName","getEffect","PureEffect","getGen3Category","hasAbility","loadSpriteData","path","$","attr","qs","split","match","el","createElement","src","getElementsByTagName","appendChild","getSpriteData","pokemon","isFront","options","mechanicsGen","isDynamax","dynamax","Pokemon","volatiles","transform","shiny","gender","getSpeciesForme","endsWith","spriteData","w","h","y","url","pixelated","isFrontSprite","cryurl","spriteid","dir","facing","graphicsGen","Math","max","min","baseDir","animationData","miscData","speciesid","isTotem","BattlePokemonSprites","BattlePokemonSpritesBW","num","baseSpeciesid","formeid","isMega","afd","noScale","allowAnim","getPokemonIconNum","isFemale","facingLeft","BattlePokemonIconIndexes","BattlePokemonIconIndexesLeft","getPokemonIcon","speciesForme","formechange","top","floor","left","fainted","getTeambuilderSpriteData","spriteDir","x","xydexExists","isNonstandard","getTeambuilderSprite","getItemIcon","spritenum","getTypeIcon","sanitizedType","getCategoryIcon","category","categoryID","sanitizedCategory","getPokeballs","Object","values","isPokeball","Moves","Items","Abilities","Types","table","overrideMoveData","assign","tname","overrideItemDesc","shortDesc","overrideAbilityData","overrideSpeciesData","overrideTier","removeType","overrideTypeChart","parseInt","require"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA,GAAI,MAAOA,CAAAA,MAAP,GAAkB,WAAtB,CAAmC;;AAEjCC,MAAD,CAAgBD,MAAhB,CAAyBC,MAAzB;AACA,CAHD,IAGO;;AAEND,MAAM,CAACE,OAAP,CAAiBF,MAAjB;AACA;;;AAGDA,MAAM,CAACG,UAAP,CAAoB,CAAC,EAAE,MAAOC,CAAAA,OAAP,GAAmB,WAAnB,EAAkCA,OAAO,CAACC,QAA1C,EAAsDD,OAAO,CAACC,QAAR,CAAiB,aAAjB,CAAxD,CAArB;;AAEA,QAASC,CAAAA,IAAT,CAAcC,IAAd,CAAyB;AACxB,UAAIA,IAAJ,SAAI,MAAMC,EAAV,CAAc;AACbD,IAAI,CAAGA,IAAI,CAACC,EAAZ;AACA,CAFD,IAEO,YAAID,IAAJ,SAAI,OAAME,MAAV,CAAkB;AACxBF,IAAI,CAAGA,IAAI,CAACE,MAAZ;AACA;AACD,GAAI,MAAOF,CAAAA,IAAP,GAAgB,QAAhB,EAA4B,MAAOA,CAAAA,IAAP,GAAgB,QAAhD,CAA0D,MAAO,EAAP;AAC1D,MAAO,CAAC,GAAKA,IAAN,EAAYG,WAAZ,GAA0BC,OAA1B,CAAkC,aAAlC,CAAiD,EAAjD,CAAP;AACA;;AAED,QAASC,CAAAA,QAAT,CAAkBL,IAAlB,CAA6B;AAC5B,MAAOD,CAAAA,IAAI,CAACC,IAAD,CAAX;AACA;;;AAGD,GAAMM,CAAAA,OAAO,CAAG;;;;;;;;;;;AAWfC,UAXe,CAWf,oBAAWC,GAAX,CAAwBC,SAAxB,CAA8D,IAAnBC,CAAAA,KAAmB,2DAAH,CAAG;AAC7D,GAAIC,CAAAA,QAAkB,CAAG,EAAzB;AACA,MAAOA,QAAQ,CAACC,MAAT,CAAkBF,KAAzB,CAAgC;AAC/B,GAAIG,CAAAA,cAAc,CAAGL,GAAG,CAACM,OAAJ,CAAYL,SAAZ,CAArB;AACA,GAAII,cAAc,EAAI,CAAtB,CAAyB;AACxBF,QAAQ,CAACI,IAAT,CAAcP,GAAG,CAACQ,KAAJ,CAAU,CAAV,CAAaH,cAAb,CAAd;AACAL,GAAG,CAAGA,GAAG,CAACQ,KAAJ,CAAUH,cAAc,CAAGJ,SAAS,CAACG,MAArC,CAAN;AACA,CAHD,IAGO;AACND,QAAQ,CAACI,IAAT,CAAcP,GAAd;AACAA,GAAG,CAAG,EAAN;AACA;AACD;AACDG,QAAQ,CAACI,IAAT,CAAcP,GAAd;AACA,MAAOG,CAAAA,QAAP;AACA,CAzBc;;;;;;;;;;;;;AAsCfM,OAtCe,CAsCf,iBAAQC,CAAR,CAAuBC,CAAvB,CAA8C;AAC7C,GAAI,MAAOD,CAAAA,CAAP,GAAa,QAAjB,CAA2B;AAC1B,MAAOA,CAAAA,CAAC,CAAIC,CAAZ;AACA;AACD,GAAI,MAAOD,CAAAA,CAAP,GAAa,QAAjB,CAA2B;AAC1B,MAAOA,CAAAA,CAAC,CAACE,aAAF,CAAgBD,CAAhB,CAAP;AACA;AACD,GAAI,MAAOD,CAAAA,CAAP,GAAa,SAAjB,CAA4B;AAC3B,MAAO,CAACA,CAAC,CAAG,CAAH,CAAO,CAAT,GAAeC,CAAC,CAAG,CAAH,CAAO,CAAvB,CAAP;AACA;AACD,GAAIE,KAAK,CAACC,OAAN,CAAcJ,CAAd,CAAJ,CAAsB;AACrB,IAAK,GAAIK,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGL,CAAC,CAACN,MAAtB,CAA8BW,CAAC,EAA/B,CAAmC;AAClC,GAAMC,CAAAA,UAAU,CAAGlB,OAAO,CAACW,OAAR,CAAgBC,CAAC,CAACK,CAAD,CAAjB,CAAuBJ,CAAD,CAAoBI,CAApB,CAAtB,CAAnB;AACA,GAAIC,UAAJ,CAAgB,MAAOA,CAAAA,UAAP;AAChB;AACD,MAAO,EAAP;AACA;AACD,GAAIN,CAAC,CAACO,OAAN,CAAe;AACd,MAAOnB,CAAAA,OAAO,CAACW,OAAR,CAAiBE,CAAD,CAAyBM,OAAzC,CAAkDP,CAAC,CAACO,OAApD,CAAP;AACA;AACD,KAAM,IAAIC,CAAAA,KAAJ,iBAA0BR,CAA1B,sBAAN;AACA,CA3Dc;;;;;;;;;;;;;AAwEfS,MAxEe,CAwEf,gBAAUC,KAAV,CAAsBC,QAAtB,CAAuD;AACtD,GAAI,CAACA,QAAL,CAAe,MAAQD,CAAAA,KAAD,CAAiBE,IAAjB,CAAsBxB,OAAO,CAACW,OAA9B,CAAP;AACf,MAAOW,CAAAA,KAAK,CAACE,IAAN,CAAW,SAACZ,CAAD,CAAIC,CAAJ,QAAUb,CAAAA,OAAO,CAACW,OAAR,CAAgBY,QAAQ,CAACX,CAAD,CAAxB,CAA6BW,QAAQ,CAACV,CAAD,CAArC,CAAV,EAAX,CAAP;AACA,CA3Ec,qBAAhB;;;;;;;AAkFA,QAASY,CAAAA,QAAT,CAAkBC,MAAlB,CAAkC;AACjC,MAAOA,CAAAA,MAAM,CAAC5B,OAAP,CAAe,iBAAf,CAAkC,EAAlC,EAAsCD,WAAtC,EAAP;AACA;;AAED,QAAS8B,CAAAA,MAAT,CAAgBC,IAAhB,CAA2B;AAC1B,GAAI,MAAOA,CAAAA,IAAP,GAAgB,QAAhB,EAA4B,MAAOA,CAAAA,IAAP,GAAgB,QAAhD,CAA0D,MAAO,EAAP;AAC1DA,IAAI,CAAG,CAAC,GAAKA,IAAN,EAAY9B,OAAZ,CAAoB,sBAApB,CAA4C,GAA5C,EAAiD+B,IAAjD,EAAP;AACA,GAAID,IAAI,CAACtB,MAAL,CAAc,EAAlB,CAAsBsB,IAAI,CAAGA,IAAI,CAACE,MAAL,CAAY,CAAZ,CAAe,EAAf,EAAmBD,IAAnB,EAAP;;;AAGtBD,IAAI,CAAGA,IAAI,CAAC9B,OAAL;AACN,6HADM;AAEN,EAFM,CAAP;;AAIA8B,IAAI,CAAGA,IAAI,CAAC9B,OAAL,CAAa,kBAAb,CAAiC,EAAjC,CAAP;;AAEA,MAAO8B,CAAAA,IAAP;AACA;;;;;;;;;;;;;;;;;;;;;;;AAuBD,GAAMG,CAAAA,GAAG,CAAG;AACFC,GADE,CACI,CADJ;AAEFC,KAFE,CAEM,MAFN;AAGFC,KAHE,CAGM,IAHN;;AAKFC,SALE,CAKmC,CAAC,IAAD,CAAO,KAAP,CAAc,KAAd,CAAqB,KAArB,CAA4B,KAA5B,CAAmC,KAAnC,CALnC;AAMFC,iBANE,CAMmD,CAAC,KAAD,CAAQ,KAAR,CAAe,KAAf,CAAsB,KAAtB,CAA6B,KAA7B,CANnD;;AAQXC,SARW,CAQkB,IARlB;;AAUXC,cAVW,CAUO,UAAM;AACvB,GAAIC,CAAAA,MAAM,CAAG,EAAb;AACA,GAAI,mBAAApD,MAAM,CAACqD,QAAP,uDAAiBC,QAAjB,qCAA2BC,QAA3B,IAAwC,OAA5C,CAAqDH,MAAM,CAAG,QAAT;AACrD,MAAUA,CAAAA,MAAV;;AAEA,CALgB,EAVN;;AAiBXI,QAjBW,CAiBC,UAAM;AACjB,GAAMD,CAAAA,QAAQ,CAAI,oBAAAvD,MAAM,CAACqD,QAAP,wDAAiBC,QAAjB,qCAA2BC,QAA3B,IAAwC,OAAzC,CAAoD,QAApD,CAA+D,EAAhF;AACA,MAAUA,CAAAA,QAAV;;AAEA,CAJU,EAjBA;;AAuBXE,gBAvBW,CAuBQ,CAACC,EAAE,CAAE,CAAL,CAAQC,EAAE,CAAE,CAAZ,CAvBR;AAwBXC,WAxBW,CAwB+B,EAxB/B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoGXC,KApGW,CAoGH;AACPC,GAAG,CAAE,SAACC,UAAD,CAAwD;AAC5D,GAAIA,UAAU,EAAI,MAAOA,CAAAA,UAAP,GAAsB,QAAxC,CAAkD;;AAEjD,MAAOA,CAAAA,UAAP;AACA;AACD,GAAItB,CAAAA,IAAI,CAAGsB,UAAU,EAAI,EAAzB;AACA,GAAIvD,CAAAA,EAAE,CAAGF,IAAI,CAACyD,UAAD,CAAb;AACA,GAAI/D,MAAM,CAACgE,aAAP,EAAwBxD,EAAE,GAAIwD,CAAAA,aAAlC,CAAiD;AAChDvB,IAAI,CAAGuB,aAAa,CAACxD,EAAD,CAApB;AACAA,EAAE,CAAGF,IAAI,CAACmC,IAAD,CAAT;AACA;AACD,GAAI,CAACzC,MAAM,CAACiE,aAAZ,CAA2BjE,MAAM,CAACiE,aAAP,CAAuB,EAAvB;AAC3B,GAAIC,CAAAA,IAAI,CAAGlE,MAAM,CAACiE,aAAP,CAAqBzD,EAArB,CAAX;AACA,GAAI0D,IAAI,EAAI,MAAOA,CAAAA,IAAI,CAACC,MAAZ,GAAuB,SAAnC,CAA8C,MAAOD,CAAAA,IAAP;;AAE9C,GAAI,CAACA,IAAD,EAAS1D,EAAE,CAACmC,MAAH,CAAU,CAAV,CAAa,EAAb,IAAqB,aAA9B,EAA+CnC,EAAE,CAACW,MAAH,CAAY,EAA/D,CAAmE;AAClE,SAA8B,mBAAmBiD,IAAnB,CAAwB5D,EAAxB,CAA9B,CAAO6D,UAAP,SAAmBC,OAAnB;AACAJ,IAAI;AACClE,MAAM,CAACiE,aAAP,CAAqBI,UAArB,GAAoC,EADrC;AAEHE,SAAS,CAAEC,MAAM,CAACF,OAAD,CAAN,EAAmB,EAF3B,EAAJ;;AAIA;AACD,GAAI,CAACJ,IAAD,EAAS1D,EAAE,CAACmC,MAAH,CAAU,CAAV,CAAa,CAAb,IAAoB,QAA7B,EAAyCnC,EAAE,CAACW,MAAH,CAAY,CAAzD,CAA4D;AAC3D+C,IAAI;AACClE,MAAM,CAACiE,aAAP,CAAqB,QAArB,GAAkC,EADnC;AAEHM,SAAS,CAAEC,MAAM,CAAChE,EAAE,CAACe,KAAH,CAAS,CAAT,CAAD,CAFd,EAAJ;;AAIA;AACD,GAAI,CAAC2C,IAAD,EAAS1D,EAAE,CAACmC,MAAH,CAAU,CAAV,CAAa,EAAb,IAAqB,aAA9B,EAA+CnC,EAAE,CAACW,MAAH,CAAY,EAA/D,CAAmE;AAClE+C,IAAI;AACClE,MAAM,CAACiE,aAAP,CAAqB,aAArB,GAAuC,EADxC;AAEHM,SAAS,CAAEC,MAAM,CAAChE,EAAE,CAACe,KAAH,CAAS,EAAT,CAAD,CAFd,EAAJ;;AAIA;;AAED,GAAI,CAAC2C,IAAL,CAAWA,IAAI,CAAG,CAACC,MAAM,CAAE,KAAT,CAAP;AACX,GAAIM,CAAAA,IAAI,CAAG,GAAIC,CAAAA,IAAJ,CAASlE,EAAT,CAAaiC,IAAb,CAAmByB,IAAnB,CAAX;AACAlE,MAAM,CAACiE,aAAP,CAAqBzD,EAArB,EAA2BiE,IAA3B;AACA,MAAOA,CAAAA,IAAP;AACA,CAxCM,CApGG;;;;;;;;;AAqJXE,KArJW,CAqJH;AACPb,GAAG,CAAE,SAACc,UAAD,CAAwD;AAC5D,GAAIA,UAAU,EAAI,MAAOA,CAAAA,UAAP,GAAsB,QAAxC,CAAkD;;AAEjD,MAAOA,CAAAA,UAAP;AACA;AACD,GAAInC,CAAAA,IAAI,CAAGmC,UAAU,EAAI,EAAzB;AACA,GAAIpE,CAAAA,EAAE,CAAGF,IAAI,CAACsE,UAAD,CAAb;AACA,GAAI5E,MAAM,CAACgE,aAAP,EAAwBxD,EAAE,GAAIwD,CAAAA,aAAlC,CAAiD;AAChDvB,IAAI,CAAGuB,aAAa,CAACxD,EAAD,CAApB;AACAA,EAAE,CAAGF,IAAI,CAACmC,IAAD,CAAT;AACA;AACD,GAAI,CAACzC,MAAM,CAAC6E,WAAZ,CAAyB7E,MAAM,CAAC6E,WAAP,CAAqB,EAArB;AACzB,GAAIX,CAAAA,IAAI,CAAGlE,MAAM,CAAC6E,WAAP,CAAmBrE,EAAnB,CAAX;AACA,GAAI0D,IAAI,EAAI,MAAOA,CAAAA,IAAI,CAACC,MAAZ,GAAuB,SAAnC,CAA8C,MAAOD,CAAAA,IAAP;AAC9C,GAAI,CAACA,IAAL,CAAWA,IAAI,CAAG,CAACC,MAAM,CAAE,KAAT,CAAP;AACX,GAAIW,CAAAA,IAAI,CAAG,GAAIC,CAAAA,IAAJ,CAASvE,EAAT,CAAaiC,IAAb,CAAmByB,IAAnB,CAAX;AACAlE,MAAM,CAAC6E,WAAP,CAAmBrE,EAAnB,EAAyBsE,IAAzB;AACA,MAAOA,CAAAA,IAAP;AACA,CAnBM,CArJG;;;AA2KXE,SA3KW,CA2KC;AACXlB,GAAG,CAAE,SAACmB,aAAD,CAAiE;AACrE,GAAIA,aAAa,EAAI,MAAOA,CAAAA,aAAP,GAAyB,QAA9C,CAAwD;;AAEvD,MAAOA,CAAAA,aAAP;AACA;AACD,GAAIxC,CAAAA,IAAI,CAAGwC,aAAa,EAAI,EAA5B;AACA,GAAIzE,CAAAA,EAAE,CAAGF,IAAI,CAAC2E,aAAD,CAAb;AACA,GAAIjF,MAAM,CAACgE,aAAP,EAAwBxD,EAAE,GAAIwD,CAAAA,aAAlC,CAAiD;AAChDvB,IAAI,CAAGuB,aAAa,CAACxD,EAAD,CAApB;AACAA,EAAE,CAAGF,IAAI,CAACmC,IAAD,CAAT;AACA;AACD,GAAI,CAACzC,MAAM,CAACkF,eAAZ,CAA6BlF,MAAM,CAACkF,eAAP,CAAyB,EAAzB;AAC7B,GAAIhB,CAAAA,IAAI,CAAGlE,MAAM,CAACkF,eAAP,CAAuB1E,EAAvB,CAAX;AACA,GAAI0D,IAAI,EAAI,MAAOA,CAAAA,IAAI,CAACC,MAAZ,GAAuB,SAAnC,CAA8C,MAAOD,CAAAA,IAAP;AAC9C,GAAI,CAACA,IAAL,CAAWA,IAAI,CAAG,CAACC,MAAM,CAAE,KAAT,CAAP;AACX,GAAIgB,CAAAA,OAAO,CAAG,GAAIC,CAAAA,OAAJ,CAAY5E,EAAZ,CAAgBiC,IAAhB,CAAsByB,IAAtB,CAAd;AACAlE,MAAM,CAACkF,eAAP,CAAuB1E,EAAvB,EAA6B2E,OAA7B;AACA,MAAOA,CAAAA,OAAP;AACA,CAnBU,CA3KD;;;AAiMXE,OAjMW,CAiMD;AACTvB,GAAG,CAAE,SAACwB,aAAD,CAAiE;AACrE,GAAIA,aAAa,EAAI,MAAOA,CAAAA,aAAP,GAAyB,QAA9C,CAAwD;;AAEvD,MAAOA,CAAAA,aAAP;AACA;AACD,GAAI7C,CAAAA,IAAI,CAAG6C,aAAa,EAAI,EAA5B;AACA,GAAI9E,CAAAA,EAAE,CAAGF,IAAI,CAACgF,aAAD,CAAb;AACA,GAAIC,CAAAA,MAAM,CAAG/E,EAAb;AACA,GAAI,CAACR,MAAM,CAACwF,qBAAZ,CAAmCxF,MAAM,CAACwF,qBAAP,CAA+B,EAA/B;AACnC,GAAID,MAAM,GAAIvF,CAAAA,MAAM,CAACwF,qBAArB,CAA4C,MAAOxF,CAAAA,MAAM,CAACwF,qBAAP,CAA6BD,MAA7B,CAAP;AAC5C,GAAIvF,MAAM,CAACgE,aAAP,EAAwBxD,EAAE,GAAIwD,CAAAA,aAAlC,CAAiD;AAChDvB,IAAI,CAAGuB,aAAa,CAACxD,EAAD,CAApB;AACAA,EAAE,CAAGF,IAAI,CAACmC,IAAD,CAAT;AACA,CAHD,IAGO,IAAIzC,MAAM,CAACyF,aAAP,EAAwB,EAAEjF,EAAE,GAAIiF,CAAAA,aAAR,CAAxB,EAAkDzF,MAAM,CAAC0F,sBAA7D,CAAqF;AAC/DA,sBAD+D,sCACvC,CAA/C,GAAMC,CAAAA,aAAa,0BAAnB;AACJ,GAAIJ,MAAM,CAACK,UAAP,CAAkBD,aAAlB,CAAJ,CAAsC;AACrCnF,EAAE,CAAGmF,aAAL;AACA;AACA;AACD;AACD;AACD,GAAI,CAAC3F,MAAM,CAACyF,aAAZ,CAA2BzF,MAAM,CAACyF,aAAP,CAAuB,EAAvB;AAC3B,GAAIvB,CAAAA,IAAI,CAAGlE,MAAM,CAACyF,aAAP,CAAqBjF,EAArB,CAAX;;AAEA,GAAI6E,CAAAA,OAAJ;AACA,GAAInB,IAAI,EAAI,MAAOA,CAAAA,IAAI,CAACC,MAAZ,GAAuB,SAAnC,CAA8C;AAC7CkB,OAAO,CAAGnB,IAAV;AACA,CAFD,IAEO;AACN,GAAI,CAACA,IAAL,CAAWA,IAAI,CAAG,CAACC,MAAM,CAAE,KAAT,CAAP;AACX,GAAI,CAACD,IAAI,CAAC2B,IAAN,EAAcrF,EAAE,CAACe,KAAH,CAAS,CAAC,CAAV,IAAiB,OAAnC,CAA4C;AAC3C2C,IAAI,CAAC2B,IAAL,CAAY,KAAI,CAACR,OAAL,CAAavB,GAAb,CAAiBtD,EAAE,CAACe,KAAH,CAAS,CAAT,CAAY,CAAC,CAAb,CAAjB,EAAkCsE,IAA9C;AACA;AACD,GAAI,CAAC3B,IAAI,CAAC2B,IAAN,EAAc3B,IAAI,CAAC4B,WAAnB,EAAkCxF,IAAI,CAAC4D,IAAI,CAAC4B,WAAN,CAAJ,GAA2BtF,EAAjE,CAAqE;AACpE0D,IAAI,CAAC2B,IAAL,CAAY,KAAI,CAACR,OAAL,CAAavB,GAAb,CAAiBI,IAAI,CAAC4B,WAAtB,EAAmCD,IAA/C;AACA;AACDR,OAAO,CAAG,GAAIU,CAAAA,OAAJ,CAAYvF,EAAZ,CAAgBiC,IAAhB,CAAsByB,IAAtB,CAAV;AACAlE,MAAM,CAACyF,aAAP,CAAqBjF,EAArB,EAA2B6E,OAA3B;AACA;;AAED,GAAIA,OAAO,CAACW,cAAZ,CAA4B;AACPX,OAAO,CAACW,cADD,wCACiB,CAAvC,GAAMC,CAAAA,KAAK,2BAAX;AACJ,GAAI3F,IAAI,CAAC2F,KAAD,CAAJ,GAAgBV,MAApB,CAA4B;AAC3BF,OAAO,CAAG,GAAIU,CAAAA,OAAJ,CAAYR,MAAZ,CAAoB9C,IAApB;AACN4C,OADM;AAET5C,IAAI,CAAEwD,KAFG;AAGTA,KAAK,CAAEA,KAAK,CAAC1E,KAAN,CAAY8D,OAAO,CAAC5C,IAAR,CAAatB,MAAb,CAAsB,CAAlC,CAHE;AAIT+E,SAAS,CAAE,EAJF;AAKTJ,WAAW,CAAET,OAAO,CAAC5C,IALZ;AAMT0D,WAAW,CAAE,IANJ,GAAV;;AAQAnG,MAAM,CAACwF,qBAAP,CAA6BD,MAA7B,EAAuCF,OAAvC;AACA;AACA;AACD;AACD;;AAED,MAAOA,CAAAA,OAAP;AACA,CA1DQ,CAjMC;;;AA8PXe,KA9PW,CA8PH;AACPC,QAAQ,CAAE,IADH;AAEPvC,GAAG,CAAE,SAACwC,IAAD,CAAqB;AACzB,GAAI,CAACA,IAAD,EAAS,MAAOA,CAAAA,IAAP,GAAgB,QAA7B,CAAuC;AACtC,GAAM9F,CAAAA,EAAE,CAAGF,IAAI,CAACgG,IAAD,CAAf;AACA,GAAM7D,CAAAA,IAAI,CAAGjC,EAAE,CAACmC,MAAH,CAAU,CAAV,CAAa,CAAb,EAAgB4D,WAAhB,GAAgC/F,EAAE,CAACmC,MAAH,CAAU,CAAV,CAA7C;AACA2D,IAAI,CAAItG,MAAM,CAACwG,eAAP,EAA0BxG,MAAM,CAACwG,eAAP,CAAuBhG,EAAvB,CAA3B,EAA0D,EAAjE;AACA,GAAI8F,IAAI,CAACG,WAAT,CAAsBH,IAAI,CAACnC,MAAL,CAAc,IAAd;AACtB,GAAI,CAACmC,IAAI,CAAC9F,EAAV,CAAc8F,IAAI,CAAC9F,EAAL,CAAUA,EAAV;AACd,GAAI,CAAC8F,IAAI,CAAC7D,IAAV,CAAgB6D,IAAI,CAAC7D,IAAL,CAAYA,IAAZ;AAChB,GAAI,CAAC6D,IAAI,CAACI,UAAV,CAAsB;AACrBJ,IAAI,CAACI,UAAL,CAAkB,MAAlB;AACA;AACD;AACD,MAAOJ,CAAAA,IAAP;AACA,CAfM;AAgBPK,GAAG,CAAE,UAAuB;AAC3B,GAAI,KAAI,CAACP,KAAL,CAAWC,QAAf,CAAyB,MAAO,CAAA,KAAI,CAACD,KAAL,CAAWC,QAAlB;AACzB,GAAMD,CAAAA,KAAK,CAAG,EAAd;AACA,IAAK,GAAM5F,CAAAA,EAAX,GAAkBR,CAAAA,MAAM,CAACwG,eAAP,EAA0B,EAA5C,CAAiD;AAChDJ,KAAK,CAAC9E,IAAN,CAAWsB,GAAG,CAACwD,KAAJ,CAAUtC,GAAV,CAActD,EAAd,CAAX;AACA;AACD,GAAI4F,KAAK,CAACjF,MAAV,CAAkB,KAAI,CAACiF,KAAL,CAAWC,QAAX,CAAsBD,KAAtB;AAClB,MAAOA,CAAAA,KAAP;AACA,CAxBM;AAyBPQ,MAAM,CAAE,SAACnE,IAAD,CAAkC;AACzC,GAAMjC,CAAAA,EAAE,CAAGF,IAAI,CAACmC,IAAD,CAAf;AACA,GAAIA,IAAI,GAAKjC,EAAE,CAACmC,MAAH,CAAU,CAAV,CAAa,CAAb,EAAgB4D,WAAhB,GAAgC/F,EAAE,CAACmC,MAAH,CAAU,CAAV,CAA7C,CAA2D,MAAO,MAAP;AAC3D,MAAO,CAAC3C,MAAM,CAACwG,eAAP,EAA0B,EAA3B,EAA+BK,cAA/B,CAA8CrG,EAA9C,CAAP;AACA,CA7BM,CA9PG,wCA0BXsG,GA1BW,CA0BX,aAAIhE,KAAJ,CAA0B,CACzB,GAAIA,KAAK,GAAK,MAAd,CAAsB,MAAO,KAAP,CACtB,GAAI,CAAC9C,MAAM,CAAC+G,sBAAZ,CAAoC,MAAO,KAAP,CACpC,GAAIjE,KAAK,GAAI,MAAKc,WAAlB,CAA+B,CAC9B,MAAO,MAAKA,WAAL,CAAiBd,KAAjB,CAAP,CACA,CACD,KAAKc,WAAL,CAAiBd,KAAjB,EAA0B,GAAIkE,CAAAA,SAAJ,CAAclE,KAAd,CAA1B,CACA,MAAO,MAAKc,WAAL,CAAiBd,KAAjB,CAAP,CACA,CAlCU,SAmCXmE,MAnCW,CAmCX,gBAAOpE,GAAP,CAAoB,CACnB,GAAI,CAACA,GAAL,CAAU,MAAO,KAAP,CACV,MAAO,MAAKiE,GAAL,OAAejE,GAAf,CAAP,CACA,CAtCU,SAwCXqE,aAxCW,CAwCX,uBAAcC,MAAd,CAAsC,0CACrC,GAAInH,MAAM,CAACoH,mBAAP,EAA8BD,MAAM,GAAIC,CAAAA,mBAA5C,CAAiE,CAChED,MAAM,CAAGC,mBAAmB,CAACD,MAAD,CAA5B,CACA,CACD,GAAIA,MAAM,CAACE,MAAP,CAAc,CAAd,IAAqB,GAAzB,CAA8B,CAC7B,MAAOzE,CAAAA,GAAG,CAACO,cAAJ,CAAqB,0BAArB,CAAkD7C,IAAI,CAAC6G,MAAM,CAACxE,MAAP,CAAc,CAAd,CAAD,CAAtD,CAA2E,MAAlF,CACA,CACD,GAAIwE,MAAM,CAACG,QAAP,CAAgB,GAAhB,mBAAwBtH,MAAM,CAACuH,MAA/B,gCAAwB,eAAeC,MAAvC,SAAwB,sBAAuBC,UAAnD,CAA+D,CAE9D,GAAIlE,CAAAA,QAAQ,CAAIgE,MAAM,CAACC,MAAP,CAAcE,IAAd,GAAuB,GAAxB,CAA+B,OAA/B,CAAyC,MAAxD,CACA,MAAOnE,CAAAA,QAAQ,CAAG,KAAX,CAAmBgE,MAAM,CAACC,MAAP,CAAcG,IAAjC,CAAwC,GAAxC,CAA8CJ,MAAM,CAACC,MAAP,CAAcE,IAA5D,CACN,WADM,CACQE,kBAAkB,CAACT,MAAD,CAAlB,CAA2BxG,OAA3B,CAAmC,OAAnC,CAA4C,GAA5C,CADf,CAEA,CACD,MAAOiC,CAAAA,GAAG,CAACO,cAAJ,CAAqB,mBAArB,CAA2CP,GAAG,CAACiF,YAAJ,CAAiBV,MAAM,EAAI,SAA3B,CAA3C,CAAmF,MAA1F,CACA,CAtDU,SAmEXU,YAnEW,CAmEX,sBAAapF,IAAb,CAAwB,CACvB,GAAI,CAACA,IAAL,CAAW,MAAO,EAAP,CACX,MAAO,CAAC,GAAKA,IAAN,EACL9B,OADK,CACG,IADH,CACS,OADT,EACkBA,OADlB,CAC0B,IAD1B,CACgC,MADhC,EACwCA,OADxC,CACgD,IADhD,CACsD,MADtD,EAC8DA,OAD9D,CACsE,IADtE,CAC4E,QAD5E,EAELY,KAFK,CAEC,CAFD,CAEI,EAFJ,CAAP,CAGA,CAxEU,SA0EXuG,KA1EW,CA0EX,eAAMC,IAAN,CAAoB,qBAEnB,uBAAO/H,MAAM,CAACgI,OAAd,eAAO,gBAAgBF,KAAvB,cAAO,gBAAgBA,KAAhB,CAAwBC,IAAxB,CAAP,CACA,CA7EU,SA+EXE,YA/EW,CA+EX,sBAAaxF,IAAb,CAA2B,CAC1B,GAAIyF,CAAAA,SAAS,CAAGzF,IAAI,CAAC9B,OAAL,CAAa,gBAAb,CAA+B,EAA/B,CAAhB,CACA,GAAIuH,SAAS,CAAC7G,OAAV,CAAkB,GAAlB,GAA0B,CAA9B,CAAiC,CAChC6G,SAAS,EAAIzF,IAAI,CAAClB,KAAL,CAAW2G,SAAS,CAAC/G,MAArB,EAA6BR,OAA7B,CAAqC,WAArC,CAAkD,EAAlD,EAAsDA,OAAtD,CAA8D,OAA9D,CAAuE,EAAvE,CAAb,CACA,CACD,MAAOuH,CAAAA,SAAP,CACA,CArFU,SAuFXC,SAvFW,CAuFX,mBAAU1F,IAAV,CAA+E,CAC9EA,IAAI,CAAG,CAACA,IAAI,EAAI,EAAT,EAAaC,IAAb,EAAP,CACA,GAAID,IAAI,CAACE,MAAL,CAAY,CAAZ,CAAe,CAAf,IAAsB,OAA1B,CAAmC,CAClC,MAAOC,CAAAA,GAAG,CAAC+B,KAAJ,CAAUb,GAAV,CAAcrB,IAAI,CAACE,MAAL,CAAY,CAAZ,EAAeD,IAAf,EAAd,CAAP,CACA,CAFD,IAEO,IAAID,IAAI,CAACE,MAAL,CAAY,CAAZ,CAAe,CAAf,IAAsB,UAA1B,CAAsC,CAC5C,MAAOC,CAAAA,GAAG,CAACoC,SAAJ,CAAclB,GAAd,CAAkBrB,IAAI,CAACE,MAAL,CAAY,CAAZ,EAAeD,IAAf,EAAlB,CAAP,CACA,CAFM,IAEA,IAAID,IAAI,CAACE,MAAL,CAAY,CAAZ,CAAe,CAAf,IAAsB,OAA1B,CAAmC,CACzC,MAAOC,CAAAA,GAAG,CAACiB,KAAJ,CAAUC,GAAV,CAAcrB,IAAI,CAACE,MAAL,CAAY,CAAZ,EAAeD,IAAf,EAAd,CAAP,CACA,CACD,GAAIlC,CAAAA,EAAE,CAAGF,IAAI,CAACmC,IAAD,CAAb,CACA,MAAO,IAAI2F,CAAAA,UAAJ,CAAe5H,EAAf,CAAmBiC,IAAnB,CAAP,CACA,CAlGU,SA+IX4F,eA/IW,CA+IX,yBAAgB/B,IAAhB,CAA8B,CAC7B,MAAO,CACN,MADM,CACE,OADF,CACW,OADX,CACoB,UADpB,CACgC,KADhC,CACuC,SADvC,CACkD,MADlD,CAC0D,QAD1D,EAELgB,QAFK,CAEIhB,IAFJ,EAEY,SAFZ,CAEwB,UAF/B,CAGA,CAnJU;;;AA8RXgC,UA9RW,CA8RX,oBAAWjD,OAAX,CAA6BF,OAA7B,CAA8C;AAC7C,IAAK,GAAMrD,CAAAA,CAAX,GAAgBuD,CAAAA,OAAO,CAACL,SAAxB,CAAmC;;AAElC,GAAIG,OAAO,GAAKE,OAAO,CAACL,SAAR,CAAkBlD,CAAlB,CAAhB,CAAsC,MAAO,KAAP;AACtC;AACD,MAAO,MAAP;AACA,CApSU;;AAsSXyG,cAtSW,CAsSX,wBAAe1F,GAAf,CAAiC;AAChC,GAAI,KAAKY,gBAAL,CAAsBZ,GAAtB,CAAJ,CAAgC;AAChC,KAAKY,gBAAL,CAAsBZ,GAAtB,EAA6B,CAA7B;;AAEA,GAAI2F,CAAAA,IAAI,CAAGC,CAAC,CAAC,gCAAD,CAAD,CAAoCC,IAApC,CAAyC,KAAzC,GAAmD,EAA9D;AACA,GAAIC,CAAAA,EAAE,CAAG,KAAOH,IAAI,CAACI,KAAL,CAAW,GAAX,EAAgB,CAAhB,GAAsB,EAA7B,CAAT;AACAJ,IAAI,CAAG,CAACA,IAAI,CAACK,KAAL,CAAW,+BAAX,GAA+C,EAAhD,EAAoD,CAApD,GAA0D,EAAjE;;AAEA,GAAIC,CAAAA,EAAE,CAAGzF,QAAQ,CAAC0F,aAAT,CAAuB,QAAvB,CAAT;AACAD,EAAE,CAACE,GAAH,CAASR,IAAI,CAAG,yBAAP,CAAmCG,EAA5C;AACAtF,QAAQ,CAAC4F,oBAAT,CAA8B,MAA9B,EAAsC,CAAtC,EAAyCC,WAAzC,CAAqDJ,EAArD;AACA,CAjTU;AAkTXK,aAlTW,CAkTX,uBAAcC,OAAd,CAAmDC,OAAnD;;;;;;;;AAQc,IARuDC,CAAAA,OAQvD,2DAAV,CAACzG,GAAG,CAAE,CAAN,CAAU;AACb,GAAM0G,CAAAA,YAAY,CAAGD,OAAO,CAACzG,GAAR,EAAe,CAApC;AACA,GAAI2G,CAAAA,SAAS,CAAG,CAAC,CAACF,OAAO,CAACG,OAA1B;AACA,GAAIL,OAAO,WAAYM,CAAAA,OAAvB,CAAgC;AAC/B,GAAIN,OAAO,CAACO,SAAR,CAAkBC,SAAtB,CAAiC;AAChCN,OAAO,CAACO,KAAR,CAAgBT,OAAO,CAACO,SAAR,CAAkBC,SAAlB,CAA4B,CAA5B,CAAhB;AACAN,OAAO,CAACQ,MAAR,CAAiBV,OAAO,CAACO,SAAR,CAAkBC,SAAlB,CAA4B,CAA5B,CAAjB;AACA,CAHD,IAGO;AACNN,OAAO,CAACO,KAAR,CAAgBT,OAAO,CAACS,KAAxB;AACAP,OAAO,CAACQ,MAAR,CAAiBV,OAAO,CAACU,MAAzB;AACA;AACD,GAAIV,OAAO,CAACO,SAAR,CAAkBF,OAAlB,EAA6BH,OAAO,CAACG,OAAR,GAAoB,KAArD,CAA4DD,SAAS,CAAG,IAAZ;AAC5DJ,OAAO,CAAGA,OAAO,CAACW,eAAR,EAAV;AACA;AACD,GAAM1E,CAAAA,OAAO,CAAGzC,GAAG,CAACyC,OAAJ,CAAYvB,GAAZ,CAAgBsF,OAAhB,CAAhB;;AAEA,GAAI/D,OAAO,CAAC5C,IAAR,CAAauH,QAAb,CAAsB,OAAtB,CAAJ,CAAoCR,SAAS,CAAG,KAAZ;AACpC,GAAIS,CAAAA,UAAU,CAAG;AAChBpH,GAAG,CAAE0G,YADW;AAEhBW,CAAC,CAAE,EAFa;AAGhBC,CAAC,CAAE,EAHa;AAIhBC,CAAC,CAAE,CAJa;AAKhBC,GAAG,CAAEzH,GAAG,CAACO,cAAJ,CAAqB,UALV;AAMhBmH,SAAS,CAAE,IANK;AAOhBC,aAAa,CAAE,KAPC;AAQhBC,MAAM,CAAE,EARQ;AAShBX,KAAK,CAAEP,OAAO,CAACO,KATC,CAAjB;;AAWA,GAAIpH,CAAAA,IAAI,CAAG4C,OAAO,CAACoF,QAAnB;AACA,GAAIC,CAAAA,GAAJ;AACA,GAAIC,CAAAA,MAAJ;AACA,GAAItB,OAAJ,CAAa;AACZY,UAAU,CAACM,aAAX,CAA2B,IAA3B;AACAG,GAAG,CAAG,EAAN;AACAC,MAAM,CAAG,OAAT;AACA,CAJD,IAIO;AACND,GAAG,CAAG,OAAN;AACAC,MAAM,CAAG,MAAT;AACA;;;;;;;;;;;;;AAaD,GAAIC,CAAAA,WAAW,CAAGrB,YAAlB;AACA,GAAI3G,GAAG,CAACkF,KAAJ,CAAU,YAAV,CAAJ,CAA6B8C,WAAW,CAAG,CAAd;AAC7B,GAAIhI,GAAG,CAACkF,KAAJ,CAAU,OAAV,GAAsB8C,WAAW,EAAI,CAAzC,CAA4CA,WAAW,CAAG,CAAd;AAC5CX,UAAU,CAACpH,GAAX,CAAiBgI,IAAI,CAACC,GAAL,CAASF,WAAT,CAAsBC,IAAI,CAACE,GAAL,CAAS1F,OAAO,CAACxC,GAAjB,CAAsB,CAAtB,CAAtB,CAAjB;AACA,GAAMmI,CAAAA,OAAO,CAAG,CAAC,EAAD,CAAK,MAAL,CAAa,MAAb,CAAqB,MAArB,CAA6B,MAA7B,CAAqC,MAArC,CAA6C,EAA7C,CAAiD,EAAjD,CAAqD,EAArD,CAAyD,EAAzD,EAA6Df,UAAU,CAACpH,GAAxE,CAAhB;;AAEA,GAAIoI,CAAAA,aAAa,CAAG,IAApB;AACA,GAAIC,CAAAA,QAAQ,CAAG,IAAf;AACA,GAAIC,CAAAA,SAAS,CAAG9F,OAAO,CAAC7E,EAAxB;AACA,GAAI6E,OAAO,CAAC+F,OAAZ,CAAqBD,SAAS,CAAG7K,IAAI,CAACmC,IAAD,CAAhB;AACrB,GAAIuI,OAAO,GAAK,EAAZ,EAAkBhL,MAAM,CAACqL,oBAA7B,CAAmD;AAClDJ,aAAa,CAAGI,oBAAoB,CAACF,SAAD,CAApC;AACA;AACD,GAAIH,OAAO,GAAK,MAAZ,EAAsBhL,MAAM,CAACsL,sBAAjC,CAAyD;AACxDL,aAAa,CAAGK,sBAAsB,CAACH,SAAD,CAAtC;AACA;AACD,GAAInL,MAAM,CAACqL,oBAAX,CAAiCH,QAAQ,CAAGG,oBAAoB,CAACF,SAAD,CAA/B;AACjC,GAAI,CAACD,QAAD,EAAalL,MAAM,CAACsL,sBAAxB,CAAgDJ,QAAQ,CAAGI,sBAAsB,CAACH,SAAD,CAAjC;AAChD,GAAI,CAACF,aAAL,CAAoBA,aAAa,CAAG,EAAhB;AACpB,GAAI,CAACC,QAAL,CAAeA,QAAQ,CAAG,EAAX;;AAEf,GAAIA,QAAQ,CAACK,GAAT,GAAiB,CAAjB,EAAsBL,QAAQ,CAACK,GAAT,CAAe,CAAC,IAA1C,CAAgD;AAC/C,GAAIC,CAAAA,aAAa,CAAGlL,IAAI,CAAC+E,OAAO,CAACS,WAAT,CAAxB;AACAmE,UAAU,CAACO,MAAX,CAAoB,eAAiBgB,aAArC;AACA,GAAIC,CAAAA,OAAO,CAAGpG,OAAO,CAACoG,OAAtB;AACA,GAAIpG,OAAO,CAACqG,MAAR,EAAkBD,OAAO;AAC5BA,OAAO,GAAK,UAAZ;AACAA,OAAO,GAAK,UADZ;AAEAA,OAAO,GAAK,YAFZ;AAGAA,OAAO,GAAK,SAHZ;AAIAA,OAAO,GAAK,SAJZ;AAKAA,OAAO,GAAK,QALZ;AAMAA,OAAO,GAAK,SANZ;AAOAA,OAAO,GAAK,cAPZ;AAQAA,OAAO,GAAK,SARZ;AASAA,OAAO,GAAK,MATZ;AAUAA,OAAO,GAAK,UAVZ;AAWAA,OAAO,GAAK,QAXZ;AAYAA,OAAO,GAAK,UAZZ;AAaAA,OAAO,GAAK,UAbZ;AAcAD,aAAa,GAAK,SAdlB;AAeAA,aAAa,GAAK,QAflB;AAgBAA,aAAa,GAAK,WAhBlB;AAiBAA,aAAa,GAAK,UAjBlB;AAkBAA,aAAa,GAAK,UAlBlB;AAmBAA,aAAa,GAAK,UAnBlB;AAoBAA,aAAa,GAAK,UApBlB;AAqBAA,aAAa,GAAK,UArBlB;AAsBAA,aAAa,GAAK,SAvBU,CAA7B;AAwBG;AACFvB,UAAU,CAACO,MAAX,EAAqBiB,OAArB;AACA;AACDxB,UAAU,CAACO,MAAX,EAAqB,MAArB;AACA;;AAED,GAAIlB,OAAO,CAACO,KAAR,EAAiBN,YAAY,CAAG,CAApC,CAAuCmB,GAAG,EAAI,QAAP;;;AAGvC,GAAI1K,MAAM,CAACuH,MAAP,EAAiBA,MAAM,CAACC,MAAxB,EAAkCD,MAAM,CAACC,MAAP,CAAcmE,GAAhD,EAAuDrC,OAAO,CAACqC,GAAnE,CAAwE;AACvEjB,GAAG,CAAG,MAAQA,GAAd;AACAT,UAAU,CAACI,GAAX,EAAkBK,GAAG,CAAG,GAAN,CAAYjI,IAAZ,CAAmB,MAArC;;;AAGA,GAAI+G,SAAS,EAAI,CAACF,OAAO,CAACsC,OAA1B,CAAmC;AAClC3B,UAAU,CAACC,CAAX,EAAgB,IAAhB;AACAD,UAAU,CAACE,CAAX,EAAgB,IAAhB;AACAF,UAAU,CAACG,CAAX,EAAgB,CAAC,EAAjB;AACA,CAJD,IAIO,IAAI/E,OAAO,CAAC+F,OAAR,EAAmB,CAAC9B,OAAO,CAACsC,OAAhC,CAAyC;AAC/C3B,UAAU,CAACC,CAAX,EAAgB,GAAhB;AACAD,UAAU,CAACE,CAAX,EAAgB,GAAhB;AACAF,UAAU,CAACG,CAAX,EAAgB,CAAC,EAAjB;AACA;AACD,MAAOH,CAAAA,UAAP;AACA;;;AAGD,GAAIX,OAAO,CAACxC,GAAZ,CAAiB;AAChBmD,UAAU,CAACO,MAAX,YAA+BlB,OAAO,CAACxC,GAAvC,WAAoDxG,IAAI,CAAC+E,OAAO,CAACS,WAAT,CAAxD;AACAmE,UAAU,CAACO,MAAX,EAAqB,MAArB;AACA;;AAED,GAAIS,aAAa,CAACN,MAAM,CAAG,GAAV,CAAb,EAA+BrB,OAAO,CAACQ,MAAR,GAAmB,GAAtD,CAA2Da,MAAM,EAAI,GAAV;AAC3D,GAAIkB,CAAAA,SAAS,CAAG,CAACjJ,GAAG,CAACkF,KAAJ,CAAU,QAAV,CAAD,EAAwB,CAAClF,GAAG,CAACkF,KAAJ,CAAU,OAAV,CAAzC;AACA,GAAI+D,SAAS,EAAI5B,UAAU,CAACpH,GAAX,EAAkB,CAAnC,CAAsCoH,UAAU,CAACK,SAAX,CAAuB,KAAvB;AACtC,GAAIjF,OAAO,CAACoG,OAAR,GAAoB,QAApB,EAAiCpG,OAAO,CAACkG,GAAR,EAAelG,OAAO,CAACkG,GAAR,CAAc,GAA9D;AACDlG,OAAO,CAACoG,OAAR,GAAoB,SAApB,EAAiCpG,OAAO,CAACkG,GAAR,CAAc,GADlD,CACwD;AACvD,GAAI,CAAC,GAAD,CAAM,GAAN,EAAWjE,QAAX,CAAoBjC,OAAO,CAACkG,GAA5B,GAAoCjC,OAAO,CAACQ,MAAR,GAAmB,GAA3D,CAAgE;AAC/DG,UAAU,CAACI,GAAX,0CAA0DhF,OAAO,CAACkG,GAAlE;AACA,CAFD,IAEO,IAAIlG,OAAO,CAACkG,GAAR,GAAgB,GAAhB,EAAuBlG,OAAO,CAACoG,OAAR,GAAoB,UAA/C,CAA2D;AACjExB,UAAU,CAACI,GAAX,0CAA0DhF,OAAO,CAACkG,GAAlE;AACA,CAFM,IAEA;AACNtB,UAAU,CAACI,GAAX,0CAA0DhF,OAAO,CAACkG,GAAlE;AACA;AACD,CATD,IASO,IAAIM,SAAS,EAAIZ,aAAa,CAACN,MAAD,CAA1B,EAAsCV,UAAU,CAACpH,GAAX,EAAkB,CAA5D,CAA+D;AACrE,GAAI8H,MAAM,CAACpJ,KAAP,CAAa,CAAC,CAAd,IAAqB,GAAzB,CAA8BkB,IAAI,EAAI,IAAR;AAC9BiI,GAAG,CAAGM,OAAO,CAAG,KAAV,CAAkBN,GAAxB;;AAEAT,UAAU,CAACC,CAAX,CAAee,aAAa,CAACN,MAAD,CAAb,CAAsBT,CAArC;AACAD,UAAU,CAACE,CAAX,CAAec,aAAa,CAACN,MAAD,CAAb,CAAsBR,CAArC;AACAF,UAAU,CAACI,GAAX,EAAkBK,GAAG,CAAG,GAAN,CAAYjI,IAAZ,CAAmB,MAArC;AACA,CAPM,IAOA;;;AAGNiI,GAAG,CAAG,CAACM,OAAO,EAAI,MAAZ,EAAsBN,GAA5B;;;;AAIA,GAAIT,UAAU,CAACpH,GAAX,EAAkB,CAAlB,EAAuBqI,QAAQ,CAAC,QAAD,CAA/B,EAA6C5B,OAAO,CAACQ,MAAR,GAAmB,GAApE,CAAyE;AACxErH,IAAI,EAAI,IAAR;AACA;;AAEDwH,UAAU,CAACI,GAAX,EAAkBK,GAAG,CAAG,GAAN,CAAYjI,IAAZ,CAAmB,MAArC;AACA;;AAED,GAAI,CAAC6G,OAAO,CAACsC,OAAb,CAAsB;AACrB,GAAIhB,WAAW,CAAG,CAAlB,CAAqB;;AAEpB,CAFD,IAEO,IAAIX,UAAU,CAACM,aAAf,CAA8B;AACpCN,UAAU,CAACC,CAAX,EAAgB,CAAhB;AACAD,UAAU,CAACE,CAAX,EAAgB,CAAhB;AACAF,UAAU,CAACG,CAAX,EAAgB,CAAC,EAAjB;AACA,CAJM,IAIA;;AAENH,UAAU,CAACC,CAAX,EAAgB,EAAI,GAApB;AACAD,UAAU,CAACE,CAAX,EAAgB,EAAI,GAApB;AACAF,UAAU,CAACG,CAAX,EAAgB,CAAC,EAAjB;AACA;AACD,GAAIH,UAAU,CAACpH,GAAX,EAAkB,CAAtB,CAAyBoH,UAAU,CAACG,CAAX,EAAgB,CAAhB;AACzB;AACD,GAAIZ,SAAS,EAAI,CAACF,OAAO,CAACsC,OAA1B,CAAmC;AAClC3B,UAAU,CAACC,CAAX,EAAgB,CAAhB;AACAD,UAAU,CAACE,CAAX,EAAgB,CAAhB;AACAF,UAAU,CAACG,CAAX,EAAgB,CAAC,EAAjB;AACA,CAJD,IAIO,IAAI/E,OAAO,CAAC+F,OAAR,EAAmB,CAAC9B,OAAO,CAACsC,OAAhC,CAAyC;AAC/C3B,UAAU,CAACC,CAAX,EAAgB,GAAhB;AACAD,UAAU,CAACE,CAAX,EAAgB,GAAhB;AACAF,UAAU,CAACG,CAAX,EAAgB,CAAC,EAAjB;AACA;;AAED,MAAOH,CAAAA,UAAP;AACA,CAzfU;;AA2fX6B,iBA3fW,CA2fX,2BAAkBtL,EAAlB,CAA0BuL,QAA1B,CAA8CC,UAA9C,CAAoE;AACnE,GAAIT,CAAAA,GAAG,CAAG,CAAV;AACA,0BAAIvL,MAAM,CAACqL,oBAAX,iCAAI,sBAA8B7K,EAA9B,CAAJ,SAAI,uBAAmC+K,GAAvC,CAA4C;AAC3CA,GAAG,CAAGF,oBAAoB,CAAC7K,EAAD,CAApB,CAAyB+K,GAA/B;AACA,CAFD,IAEO,2BAAIvL,MAAM,CAACyF,aAAX,iCAAI,sBAAuBjF,EAAvB,CAAJ,SAAI,uBAA4B+K,GAAhC,CAAqC;AAC3CA,GAAG,CAAG9F,aAAa,CAACjF,EAAD,CAAb,CAAkB+K,GAAxB;AACA;AACD,GAAIA,GAAG,CAAG,CAAV,CAAaA,GAAG,CAAG,CAAN;AACb,GAAIA,GAAG,CAAG,GAAV,CAAeA,GAAG,CAAG,CAAN;;AAEf,2BAAIvL,MAAM,CAACiM,wBAAX,SAAI,uBAAkCzL,EAAlC,CAAJ,CAA2C;AAC1C+K,GAAG,CAAGU,wBAAwB,CAACzL,EAAD,CAA9B;AACA;;AAED,GAAIuL,QAAJ,CAAc;AACb,GAAI,CAAC,UAAD,CAAa,UAAb,CAAyB,WAAzB,CAAsC,UAAtC,CAAkD,QAAlD,EAA4DzE,QAA5D,CAAqE9G,EAArE,CAAJ,CAA8E;AAC7E+K,GAAG,CAAGU,wBAAwB,CAACzL,EAAE,CAAG,GAAN,CAA9B;AACA;AACD;AACD,GAAIwL,UAAJ,CAAgB;AACf,GAAIE,4BAA4B,CAAC1L,EAAD,CAAhC,CAAsC;AACrC+K,GAAG,CAAGW,4BAA4B,CAAC1L,EAAD,CAAlC;AACA;AACD;AACD,MAAO+K,CAAAA,GAAP;AACA,CAphBU;;AAshBXY,cAthBW,CAshBX,wBAAe/C,OAAf,CAA8E4C,UAA9E,CAAoG;AACnG,GAAI5C,OAAO,GAAK,UAAhB,CAA4B;AAC3B,oCAAqCxG,GAAG,CAACO,cAAzC;AACA,CAFD,IAEO,IAAIiG,OAAO,GAAK,mBAAhB,CAAqC;AAC3C,oCAAqCxG,GAAG,CAACO,cAAzC;AACA,CAFM,IAEA,IAAIiG,OAAO,GAAK,kBAAhB,CAAoC;AAC1C,oCAAqCxG,GAAG,CAACO,cAAzC;AACA,CAFM,IAEA,IAAIiG,OAAO,GAAK,eAAhB,CAAiC;AACvC,oCAAqCxG,GAAG,CAACO,cAAzC;AACA;;AAED,GAAI3C,CAAAA,EAAE,CAAGF,IAAI,CAAC8I,OAAD,CAAb;AACA,GAAI,CAACA,OAAD,EAAY,MAAOA,CAAAA,OAAP,GAAmB,QAAnC,CAA6CA,OAAO,CAAG,IAAV;;AAE7C,aAAIA,OAAJ,SAAI,SAASgD,YAAb,CAA2B5L,EAAE,CAAGF,IAAI,CAAC8I,OAAO,CAACgD,YAAT,CAAT;;AAE3B,cAAIhD,OAAJ,SAAI,UAAS/D,OAAb,CAAsB7E,EAAE,CAAGF,IAAI,CAAC8I,OAAO,CAAC/D,OAAT,CAAT;;AAEtB,GAAI,WAAA+D,OAAO,OAAP,iCAASO,SAAT,6BAAoB0C,WAApB,EAAmC,CAACjD,OAAO,CAACO,SAAR,CAAkBC,SAA1D,CAAqE;;AAEpEpJ,EAAE,CAAGF,IAAI,CAAC8I,OAAO,CAACO,SAAR,CAAkB0C,WAAlB,CAA8B,CAA9B,CAAD,CAAT;AACA;AACD,GAAId,CAAAA,GAAG,CAAG,KAAKO,iBAAL,CAAuBtL,EAAvB,CAA2B,YAAA4I,OAAO,OAAP,kBAASU,MAAT,IAAoB,GAA/C,CAAoDkC,UAApD,CAAV;;AAEA,GAAIM,CAAAA,GAAG,CAAGzB,IAAI,CAAC0B,KAAL,CAAWhB,GAAG,CAAG,EAAjB,EAAuB,EAAjC;AACA,GAAIiB,CAAAA,IAAI,CAAIjB,GAAG,CAAG,EAAP,CAAa,EAAxB;AACA,GAAIkB,CAAAA,OAAO,CAAI,WAACrD,OAAD,mBAAsCqD,OAAtC,uDAAf;AACA,oCAAqC7J,GAAG,CAACO,cAAzC,yDAA+GqJ,IAA/G,QAA0HF,GAA1H,MAAkIG,OAAlI;AACA,CAljBU;;AAojBXC,wBApjBW,CAojBX,kCAAyBtD,OAAzB,CAA+E,IAAxCvG,CAAAA,GAAwC,2DAA1B,CAA0B;AAC9E,GAAIrC,CAAAA,EAAE,CAAGF,IAAI,CAAC8I,OAAO,CAAC/D,OAAT,CAAb;AACA,GAAIoF,CAAAA,QAAQ,CAAGrB,OAAO,CAACqB,QAAvB;AACA,GAAIpF,CAAAA,OAAO,CAAGzC,GAAG,CAACyC,OAAJ,CAAYvB,GAAZ,CAAgBsF,OAAO,CAAC/D,OAAxB,CAAd;AACA,GAAI+D,OAAO,CAAC/D,OAAR,EAAmB,CAACoF,QAAxB,CAAkC;AACjCA,QAAQ,CAAGpF,OAAO,CAACoF,QAAR,EAAoBnK,IAAI,CAAC8I,OAAO,CAAC/D,OAAT,CAAnC;AACA;AACD,GAAIA,OAAO,CAAClB,MAAR,GAAmB,KAAvB,CAA8B,MAAO,CAAEwI,SAAS,CAAE,cAAb,CAA6BlC,QAAQ,CAAE,GAAvC,CAA4CmC,CAAC,CAAE,EAA/C,CAAmDxC,CAAC,CAAE,CAAtD,CAAP;AAC9B,GAAMH,CAAAA,UAAiC,CAAG;AACzCQ,QAAQ,CAARA,QADyC;AAEzCkC,SAAS,CAAE,aAF8B;AAGzCC,CAAC,CAAE,CAAC,CAHqC;AAIzCxC,CAAC,CAAE,CAAC,CAJqC,CAA1C;;AAMA,GAAIhB,OAAO,CAACS,KAAZ,CAAmBI,UAAU,CAACJ,KAAX,CAAmB,IAAnB;AACnB,GAAIjH,GAAG,CAACkF,KAAJ,CAAU,YAAV,CAAJ,CAA6BjF,GAAG,CAAG,CAAN;AAC7B,GAAID,GAAG,CAACkF,KAAJ,CAAU,OAAV,GAAsBjF,GAAG,CAAG,CAAhC,CAAmCA,GAAG,CAAG,CAAN;AACnC,GAAIgK,CAAAA,WAAW,CAAI,CAACxH,OAAO,CAACyH,aAAT,EAA0BzH,OAAO,CAACyH,aAAR,GAA0B,MAApD,EAA8DzH,OAAO,CAACyH,aAAR,GAA0B,KAAzF,EAAmG;AACpH,gBADoH,CAClG,cADkG,CAClF,QADkF,CACxE,UADwE,CAC5D,aAD4D,CAC7C,cAD6C,CAC7B,mBAD6B,CACR,YADQ,CACM,aADN,CACqB,eADrB,CACsC,kBADtC,CAC0D,iBAD1D,CAC6E,aAD7E,CAC4F,cAD5F,CAC4G,gBAD5G;AAEnHxF,QAFmH,CAE1GjC,OAAO,CAAC7E,EAFkG,CAArH;AAGA,GAAI6E,OAAO,CAACxC,GAAR,GAAgB,CAAhB,EAAqBwC,OAAO,CAACyH,aAAR,GAA0B,KAAnD,CAA0DD,WAAW,CAAG,KAAd;AAC1D,GAAI,CAAC,CAAChK,GAAD,EAAQA,GAAG,EAAI,CAAhB,GAAsBgK,WAA1B,CAAuC;AACtC,GAAIxH,OAAO,CAACxC,GAAR,EAAe,CAAnB,CAAsB;AACrBoH,UAAU,CAAC2C,CAAX,CAAe,CAAC,CAAhB;AACA3C,UAAU,CAACG,CAAX,CAAe,CAAC,CAAhB;AACA,CAHD,IAGO,IAAI5J,EAAE,CAACmC,MAAH,CAAU,CAAV,CAAa,CAAb,IAAoB,QAAxB,CAAkC;AACxCsH,UAAU,CAAC2C,CAAX,CAAe,CAAC,CAAhB;AACA3C,UAAU,CAACG,CAAX,CAAe,CAAf;AACA,CAHM,IAGA,IAAI5J,EAAE,GAAK,UAAX,CAAuB;AAC7ByJ,UAAU,CAAC2C,CAAX,CAAe,CAAC,CAAhB;AACA3C,UAAU,CAACG,CAAX,CAAe,CAAf;AACA,CAHM,IAGA,IAAI5J,EAAE,GAAK,cAAX,CAA2B;AACjCyJ,UAAU,CAAC2C,CAAX,CAAe,CAAC,CAAhB;AACA3C,UAAU,CAACG,CAAX,CAAe,CAAf;AACA;AACD,MAAOH,CAAAA,UAAP;AACA;AACDA,UAAU,CAAC0C,SAAX,CAAuB,cAAvB;AACA,GAAI9J,GAAG,EAAI,CAAP,EAAYwC,OAAO,CAACxC,GAAR,EAAe,CAA/B,CAAkCoH,UAAU,CAAC0C,SAAX,CAAuB,cAAvB,CAAlC;AACK,GAAI9J,GAAG,EAAI,CAAP,EAAYwC,OAAO,CAACxC,GAAR,EAAe,CAA/B,CAAkCoH,UAAU,CAAC0C,SAAX,CAAuB,cAAvB,CAAlC;AACA,GAAI9J,GAAG,EAAI,CAAP,EAAYwC,OAAO,CAACxC,GAAR,EAAe,CAA/B,CAAkCoH,UAAU,CAAC0C,SAAX,CAAuB,cAAvB,CAAlC;AACA,GAAI9J,GAAG,EAAI,CAAP,EAAYwC,OAAO,CAACxC,GAAR,EAAe,CAA/B,CAAkCoH,UAAU,CAAC0C,SAAX,CAAuB,cAAvB;AACvC1C,UAAU,CAAC2C,CAAX,CAAe,EAAf;AACA3C,UAAU,CAACG,CAAX,CAAe,CAAf;AACA,MAAOH,CAAAA,UAAP;AACA,CAjmBU;;AAmmBX8C,oBAnmBW,CAmmBX,8BAAqB3D,OAArB,CAAoD,IAAjBvG,CAAAA,GAAiB,2DAAH,CAAG;AACnD,GAAI,CAACuG,OAAL,CAAc,MAAO,EAAP;AACd,GAAMlF,CAAAA,IAAI,CAAG,KAAKwI,wBAAL,CAA8BtD,OAA9B,CAAuCvG,GAAvC,CAAb;AACA,GAAMgH,CAAAA,KAAK,CAAI3F,IAAI,CAAC2F,KAAL,CAAa,QAAb,CAAwB,EAAvC;AACA,MAAO,wBAA0BjH,GAAG,CAACO,cAA9B,CAA+Ce,IAAI,CAACyI,SAApD,CAAgE9C,KAAhE,CAAwE,GAAxE,CAA8E3F,IAAI,CAACuG,QAAnF,CAA8F,4BAA9F,CAA6HvG,IAAI,CAAC0I,CAAlI,CAAsI,KAAtI,CAA8I1I,IAAI,CAACkG,CAAnJ,CAAuJ,gCAA9J;AACA,CAxmBU;;AA0mBX4C,WA1mBW,CA0mBX,qBAAYlI,IAAZ,CAAuB;AACtB,GAAIyG,CAAAA,GAAG,CAAG,CAAV;AACA,GAAI,MAAOzG,CAAAA,IAAP,GAAgB,QAAhB,EAA4B5E,OAAO,CAAC2E,WAAxC,CAAqDC,IAAI,CAAG5E,OAAO,CAAC2E,WAAR,CAAoBvE,IAAI,CAACwE,IAAD,CAAxB,CAAP;AACrD,UAAIA,IAAJ,SAAI,MAAMmI,SAAV,CAAqB1B,GAAG,CAAGzG,IAAI,CAACmI,SAAX;;AAErB,GAAIX,CAAAA,GAAG,CAAGzB,IAAI,CAAC0B,KAAL,CAAWhB,GAAG,CAAG,EAAjB,EAAuB,EAAjC;AACA,GAAIiB,CAAAA,IAAI,CAAIjB,GAAG,CAAG,EAAP,CAAa,EAAxB;AACA,MAAO,8BAAgC3I,GAAG,CAACO,cAApC,CAAqD,oDAArD,CAA4GqJ,IAA5G,CAAmH,MAAnH,CAA4HF,GAA5H,CAAkI,IAAzI;AACA,CAlnBU;;AAonBXY,WApnBW,CAonBX,qBAAY5G,IAAZ,CAAiC5E,CAAjC,CAA8C;AAC7C4E,IAAI,CAAG,KAAKF,KAAL,CAAWtC,GAAX,CAAewC,IAAf,EAAqB7D,IAA5B;AACA,GAAI,CAAC6D,IAAL,CAAWA,IAAI,CAAG,KAAP;AACX,GAAI6G,CAAAA,aAAa,CAAG7G,IAAI,CAAC3F,OAAL,CAAa,KAAb,CAAoB,KAApB,CAApB;AACA,oBAAoBiC,GAAG,CAACO,cAAxB,kBAAuDgK,aAAvD,iBAAkF7G,IAAlF,oDAAkI5E,CAAC,CAAG,IAAH,CAAU,EAA7I;AACA,CAznBU;;AA2nBX0L,eA3nBW,CA2nBX,yBAAgBC,QAAhB,CAAyC;AACxC,GAAMC,CAAAA,UAAU,CAAGhN,IAAI,CAAC+M,QAAD,CAAvB;AACA,GAAIE,CAAAA,iBAAiB,CAAG,EAAxB;AACA,OAAQD,UAAR;AACA,IAAK,UAAL;AACA,IAAK,SAAL;AACA,IAAK,QAAL;AACCC,iBAAiB,CAAGD,UAAU,CAACjG,MAAX,CAAkB,CAAlB,EAAqBd,WAArB,GAAqC+G,UAAU,CAAC/L,KAAX,CAAiB,CAAjB,CAAzD;AACA;AACD;AACCgM,iBAAiB,CAAG,WAApB;AACA,MARD;;AAUA,oBAAoB3K,GAAG,CAACO,cAAxB,uBAA4DoK,iBAA5D,iBAA2FA,iBAA3F;AACA,CAzoBU;;AA2oBXC,YA3oBW,CA2oBX,uBAAe;AACd,GAAI,KAAKtK,SAAT,CAAoB,MAAO,MAAKA,SAAZ;AACpB,KAAKA,SAAL,CAAiB,EAAjB;AACA,GAAI,CAAClD,MAAM,CAAC6E,WAAZ,CAAyB7E,MAAM,CAAC6E,WAAP,CAAqB,EAArB,CAHX;AAIK4I,MAAM,CAACC,MAAP,CAAc1N,MAAM,CAAC6E,WAArB,CAJL,wBAIuD,CAAhE,GAAMX,CAAAA,IAAI,WAAV;AACJ,GAAI,CAACA,IAAI,CAACyJ,UAAV,CAAsB;AACtB,KAAKzK,SAAL,CAAe5B,IAAf,CAAoB4C,IAAI,CAACzB,IAAzB;AACA;AACD,MAAO,MAAKS,SAAZ;AACA,CAppBU,sBAAZ,C;;;AAupBM8D,S;;;;;;;;;;;AAWL,mBAAYlE,KAAZ,CAAuB,sBAVdD,GAUc,aATdC,KASc,aARdC,KAQc,CARN,CAChB6K,KAAK,CAAE,EADS,CAEhBC,KAAK,CAAE,EAFS,CAGhBC,SAAS,CAAE,EAHK,CAIhB/H,OAAO,CAAE,EAJO,CAKhBgI,KAAK,CAAE,EALS,CAQM,MADvB7K,SACuB,CADM,IACN;;;;;;AAMvBW,KANuB,CAMf;AACPC,GAAG,CAAE,SAACrB,IAAD,CAAwB;AAC5B,GAAIjC,CAAAA,EAAE,CAAGF,IAAI,CAACmC,IAAD,CAAb;AACA,GAAIzC,MAAM,CAACgE,aAAP,EAAwBxD,EAAE,GAAIwD,CAAAA,aAAlC,CAAiD;AAChDvB,IAAI,CAAGuB,aAAa,CAACxD,EAAD,CAApB;AACAA,EAAE,CAAGF,IAAI,CAACmC,IAAD,CAAT;AACA;AACD,GAAI,MAAI,CAACM,KAAL,CAAW6K,KAAX,CAAiB/G,cAAjB,CAAgCrG,EAAhC,CAAJ,CAAyC,MAAO,CAAA,MAAI,CAACuC,KAAL,CAAW6K,KAAX,CAAiBpN,EAAjB,CAAP;;AAEzC,GAAI0D,CAAAA,IAAI,kBAAOtB,GAAG,CAACiB,KAAJ,CAAUC,GAAV,CAAcrB,IAAd,CAAP,CAAR;;AAEA,IAAK,GAAIX,CAAAA,CAAC,CAAGc,GAAG,CAACC,GAAJ,CAAU,CAAvB,CAA0Bf,CAAC,EAAI,MAAI,CAACe,GAApC,CAAyCf,CAAC,EAA1C,CAA8C;AAC7C,GAAMkM,CAAAA,KAAK,CAAGhO,MAAM,CAAC+G,sBAAP,OAAoCjF,CAApC,CAAd;AACA,GAAItB,EAAE,GAAIwN,CAAAA,KAAK,CAACC,gBAAhB,CAAkC;AACjCR,MAAM,CAACS,MAAP,CAAchK,IAAd,CAAoB8J,KAAK,CAACC,gBAAN,CAAuBzN,EAAvB,CAApB;AACA;AACD;AACD,GAAI,MAAI,CAACsC,KAAL,SAAqB,MAAI,CAACD,GAA9B,CAAqC;AACpC,GAAIsL,CAAAA,KAAK,CAAG,MAAI,CAACrL,KAAjB;;;;AAIA,GAAMkL,CAAAA,MAAK,CAAGhO,MAAM,CAAC+G,sBAAP,CAA8BoH,KAA9B,CAAd;AACA,GAAI3N,EAAE,GAAIwN,CAAAA,MAAK,CAACC,gBAAhB,CAAkC;AACjCR,MAAM,CAACS,MAAP,CAAchK,IAAd,CAAoB8J,MAAK,CAACC,gBAAN,CAAuBzN,EAAvB,CAApB;AACA;AACD;AACD,GAAI,MAAI,CAACqC,GAAL,EAAY,CAAZ,EAAiBqB,IAAI,CAACmJ,QAAL,GAAkB,QAAvC,CAAiD;AAChDnJ,IAAI,CAACmJ,QAAL,CAAgBzK,GAAG,CAACyF,eAAJ,CAAoBnE,IAAI,CAACoC,IAAzB,CAAhB;AACA;;AAED,GAAM7B,CAAAA,IAAI,CAAG,GAAIC,CAAAA,IAAJ,CAASlE,EAAT,CAAaiC,IAAb,CAAmByB,IAAnB,CAAb;AACA,MAAI,CAACnB,KAAL,CAAW6K,KAAX,CAAiBpN,EAAjB,EAAuBiE,IAAvB;AACA,MAAOA,CAAAA,IAAP;AACA,CAlCM,CANe;;;AA2CvBE,KA3CuB,CA2Cf;AACPb,GAAG,CAAE,SAACrB,IAAD,CAAwB;AAC5B,GAAIjC,CAAAA,EAAE,CAAGF,IAAI,CAACmC,IAAD,CAAb;AACA,GAAIzC,MAAM,CAACgE,aAAP,EAAwBxD,EAAE,GAAIwD,CAAAA,aAAlC,CAAiD;AAChDvB,IAAI,CAAGuB,aAAa,CAACxD,EAAD,CAApB;AACAA,EAAE,CAAGF,IAAI,CAACmC,IAAD,CAAT;AACA;AACD,GAAI,MAAI,CAACM,KAAL,CAAW8K,KAAX,CAAiBhH,cAAjB,CAAgCrG,EAAhC,CAAJ,CAAyC,MAAO,CAAA,MAAI,CAACuC,KAAL,CAAW8K,KAAX,CAAiBrN,EAAjB,CAAP;;AAEzC,GAAI0D,CAAAA,IAAI,kBAAOtB,GAAG,CAAC+B,KAAJ,CAAUb,GAAV,CAAcrB,IAAd,CAAP,CAAR;;AAEA,IAAK,GAAIX,CAAAA,CAAC,CAAG,MAAI,CAACe,GAAlB,CAAuBf,CAAC,CAAG,CAA3B,CAA8BA,CAAC,EAA/B,CAAmC;AAClC,GAAMkM,CAAAA,KAAK,CAAGhO,MAAM,CAAC+G,sBAAP,CAA8B,MAAQjF,CAAtC,CAAd;AACA,GAAItB,EAAE,GAAIwN,CAAAA,KAAK,CAACI,gBAAhB,CAAkC;AACjClK,IAAI,CAACmK,SAAL,CAAiBL,KAAK,CAACI,gBAAN,CAAuB5N,EAAvB,CAAjB;AACA;AACA;AACD;;AAED,GAAMsE,CAAAA,IAAI,CAAG,GAAIC,CAAAA,IAAJ,CAASvE,EAAT,CAAaiC,IAAb,CAAmByB,IAAnB,CAAb;AACA,MAAI,CAACnB,KAAL,CAAW8K,KAAX,CAAiBrN,EAAjB,EAAuBsE,IAAvB;AACA,MAAOA,CAAAA,IAAP;AACA,CAtBM,CA3Ce;;;AAoEvBE,SApEuB,CAoEX;AACXlB,GAAG,CAAE,SAACrB,IAAD,CAA2B;AAC/B,GAAIjC,CAAAA,EAAE,CAAGF,IAAI,CAACmC,IAAD,CAAb;AACA,GAAIzC,MAAM,CAACgE,aAAP,EAAwBxD,EAAE,GAAIwD,CAAAA,aAAlC,CAAiD;AAChDvB,IAAI,CAAGuB,aAAa,CAACxD,EAAD,CAApB;AACAA,EAAE,CAAGF,IAAI,CAACmC,IAAD,CAAT;AACA;AACD,GAAI,MAAI,CAACM,KAAL,CAAW+K,SAAX,CAAqBjH,cAArB,CAAoCrG,EAApC,CAAJ,CAA6C,MAAO,CAAA,MAAI,CAACuC,KAAL,CAAW+K,SAAX,CAAqBtN,EAArB,CAAP;;AAE7C,GAAI0D,CAAAA,IAAI,kBAAOtB,GAAG,CAACoC,SAAJ,CAAclB,GAAd,CAAkBrB,IAAlB,CAAP,CAAR;;AAEA,IAAK,GAAIX,CAAAA,CAAC,CAAGc,GAAG,CAACC,GAAJ,CAAU,CAAvB,CAA0Bf,CAAC,EAAI,MAAI,CAACe,GAApC,CAAyCf,CAAC,EAA1C,CAA8C;AAC7C,GAAMkM,CAAAA,KAAK,CAAGhO,MAAM,CAAC+G,sBAAP,OAAoCjF,CAApC,CAAd;AACA,GAAItB,EAAE,GAAIwN,CAAAA,KAAK,CAACM,mBAAhB,CAAqC;AACpCb,MAAM,CAACS,MAAP,CAAchK,IAAd,CAAoB8J,KAAK,CAACM,mBAAN,CAA0B9N,EAA1B,CAApB;AACA;AACD;AACD,GAAI,MAAI,CAACsC,KAAL,SAAqB,MAAI,CAACD,GAA9B,CAAqC;AACpC,GAAMmL,CAAAA,OAAK,CAAGhO,MAAM,CAAC+G,sBAAP,CAA8B,MAAI,CAACjE,KAAnC,CAAd;AACA,GAAItC,EAAE,GAAIwN,CAAAA,OAAK,CAACM,mBAAhB,CAAqC;AACpCb,MAAM,CAACS,MAAP,CAAchK,IAAd,CAAoB8J,OAAK,CAACM,mBAAN,CAA0B9N,EAA1B,CAApB;AACA;AACD;;AAED,GAAM2E,CAAAA,OAAO,CAAG,GAAIC,CAAAA,OAAJ,CAAY5E,EAAZ,CAAgBiC,IAAhB,CAAsByB,IAAtB,CAAhB;AACA,MAAI,CAACnB,KAAL,CAAW+K,SAAX,CAAqBtN,EAArB,EAA2B2E,OAA3B;AACA,MAAOA,CAAAA,OAAP;AACA,CA3BU,CApEW;;;AAkGvBE,OAlGuB,CAkGb;AACTvB,GAAG,CAAE,SAACrB,IAAD,CAA2B;AAC/B,GAAIjC,CAAAA,EAAE,CAAGF,IAAI,CAACmC,IAAD,CAAb;AACA,GAAIzC,MAAM,CAACgE,aAAP,EAAwBxD,EAAE,GAAIwD,CAAAA,aAAlC,CAAiD;AAChDvB,IAAI,CAAGuB,aAAa,CAACxD,EAAD,CAApB;AACAA,EAAE,CAAGF,IAAI,CAACmC,IAAD,CAAT;AACA;AACD,GAAI,MAAI,CAACM,KAAL,CAAWgD,OAAX,CAAmBc,cAAnB,CAAkCrG,EAAlC,CAAJ,CAA2C,MAAO,CAAA,MAAI,CAACuC,KAAL,CAAWgD,OAAX,CAAmBvF,EAAnB,CAAP;;AAE3C,GAAI0D,CAAAA,IAAI,kBAAOtB,GAAG,CAACyC,OAAJ,CAAYvB,GAAZ,CAAgBrB,IAAhB,CAAP,CAAR;;AAEA,IAAK,GAAIX,CAAAA,CAAC,CAAGc,GAAG,CAACC,GAAJ,CAAU,CAAvB,CAA0Bf,CAAC,EAAI,MAAI,CAACe,GAApC,CAAyCf,CAAC,EAA1C,CAA8C;AAC7C,GAAMkM,CAAAA,OAAK,CAAGhO,MAAM,CAAC+G,sBAAP,OAAoCjF,CAApC,CAAd;AACA,GAAItB,EAAE,GAAIwN,CAAAA,OAAK,CAACO,mBAAhB,CAAqC;AACpCd,MAAM,CAACS,MAAP,CAAchK,IAAd,CAAoB8J,OAAK,CAACO,mBAAN,CAA0B/N,EAA1B,CAApB;AACA;AACD;AACD,GAAI,MAAI,CAACsC,KAAL,SAAqB,MAAI,CAACD,GAA9B,CAAqC;AACpC,GAAMmL,CAAAA,OAAK,CAAGhO,MAAM,CAAC+G,sBAAP,CAA8B,MAAI,CAACjE,KAAnC,CAAd;AACA,GAAItC,EAAE,GAAIwN,CAAAA,OAAK,CAACO,mBAAhB,CAAqC;AACpCd,MAAM,CAACS,MAAP,CAAchK,IAAd,CAAoB8J,OAAK,CAACO,mBAAN,CAA0B/N,EAA1B,CAApB;AACA;AACD;AACD,GAAI,MAAI,CAACqC,GAAL,CAAW,CAAX,EAAgB,MAAI,CAACC,KAAL,GAAe,YAAnC,CAAiD;AAChDoB,IAAI,CAACc,SAAL,CAAiB,CAAC,EAAG,YAAJ,CAAjB;AACA;;AAED,GAAMgJ,CAAAA,KAAK,CAAGhO,MAAM,CAAC+G,sBAAP,CAA8B,MAAI,CAACjE,KAAnC,CAAd;AACA,GAAItC,EAAE,GAAIwN,CAAAA,KAAK,CAACQ,YAAhB,CAA8BtK,IAAI,CAAC2B,IAAL,CAAYmI,KAAK,CAACQ,YAAN,CAAmBhO,EAAnB,CAAZ;AAC9B,GAAI,CAAC0D,IAAI,CAAC2B,IAAN,EAAcrF,EAAE,CAACe,KAAH,CAAS,CAAC,CAAV,IAAiB,OAAnC,CAA4C;AAC3C2C,IAAI,CAAC2B,IAAL,CAAY,MAAI,CAACR,OAAL,CAAavB,GAAb,CAAiBtD,EAAE,CAACe,KAAH,CAAS,CAAT,CAAY,CAAC,CAAb,CAAjB,EAAkCsE,IAA9C;AACA;AACD,GAAI,CAAC3B,IAAI,CAAC2B,IAAN,EAAc3B,IAAI,CAAC4B,WAAnB,EAAkCxF,IAAI,CAAC4D,IAAI,CAAC4B,WAAN,CAAJ,GAA2BtF,EAAjE,CAAqE;AACpE0D,IAAI,CAAC2B,IAAL,CAAY,MAAI,CAACR,OAAL,CAAavB,GAAb,CAAiBI,IAAI,CAAC4B,WAAtB,EAAmCD,IAA/C;AACA;AACD,GAAI3B,IAAI,CAACrB,GAAL,CAAW,MAAI,CAACA,GAApB,CAAyBqB,IAAI,CAAC2B,IAAL,CAAY,SAAZ;;AAEzB,GAAMR,CAAAA,OAAO,CAAG,GAAIU,CAAAA,OAAJ,CAAYvF,EAAZ,CAAgBiC,IAAhB,CAAsByB,IAAtB,CAAhB;AACA,MAAI,CAACnB,KAAL,CAAWgD,OAAX,CAAmBvF,EAAnB,EAAyB6E,OAAzB;AACA,MAAOA,CAAAA,OAAP;AACA,CAxCQ,CAlGa;;;AA6IvBe,KA7IuB,CA6If;AACPtC,GAAG,CAAE,SAACrB,IAAD,CAA0B;AAC9B,GAAMjC,CAAAA,EAAE,CAAGF,IAAI,CAACmC,IAAD,CAAf;AACAA,IAAI,CAAGjC,EAAE,CAACmC,MAAH,CAAU,CAAV,CAAa,CAAb,EAAgB4D,WAAhB,GAAgC/F,EAAE,CAACmC,MAAH,CAAU,CAAV,CAAvC;;AAEA,GAAI,MAAI,CAACI,KAAL,CAAWgL,KAAX,CAAiBlH,cAAjB,CAAgCrG,EAAhC,CAAJ,CAAyC,MAAO,CAAA,MAAI,CAACuC,KAAL,CAAWgL,KAAX,CAAiBvN,EAAjB,CAAP;;AAEzC,GAAI0D,CAAAA,IAAI,kBAAOtB,GAAG,CAACwD,KAAJ,CAAUtC,GAAV,CAAcrB,IAAd,CAAP,CAAR;;AAEA,IAAK,GAAIX,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,EAAI,MAAI,CAACe,GAA1B,CAA+Bf,CAAC,EAAhC,CAAoC;AACnC,GAAMkM,CAAAA,KAAK,CAAGhO,MAAM,CAAC+G,sBAAP,CAA8B,MAAQjF,CAAtC,CAAd;AACA,GAAItB,EAAE,GAAIwN,CAAAA,KAAK,CAACS,UAAhB,CAA4B;AAC3BvK,IAAI,CAACC,MAAL,CAAc,KAAd;;AAEA;AACA;AACD,GAAI3D,EAAE,GAAIwN,CAAAA,KAAK,CAACU,iBAAhB,CAAmC;AAClCxK,IAAI,kBAAOA,IAAP,CAAgB8J,KAAK,CAACU,iBAAN,CAAwBlO,EAAxB,CAAhB,CAAJ;AACA;AACD;;AAED,MAAI,CAACuC,KAAL,CAAWgL,KAAX,CAAiBvN,EAAjB,EAAuB0D,IAAvB;AACA,MAAOA,CAAAA,IAAP;AACA,CAvBM,CA7Ie,CACtB,KAAKpB,KAAL,CAAaA,KAAb,CACA,GAAMD,CAAAA,GAAG,CAAG8L,QAAQ,CAAC7L,KAAK,CAACH,MAAN,CAAa,CAAb,CAAgB,CAAhB,CAAD,CAAqB,EAArB,CAApB,CACA,GAAI,CAACG,KAAK,CAAC8C,UAAN,CAAiB,KAAjB,CAAD,EAA4B,CAAC/C,GAAjC,CAAsC,KAAM,IAAIZ,CAAAA,KAAJ,CAAU,mBAAV,CAAN,CACtC,KAAKY,GAAL,CAAWA,GAAX,CACA,C;;;AAkKD2K,Y,CAAA,uBAAe;AACd,GAAI,KAAKtK,SAAT,CAAoB,MAAO,MAAKA,SAAZ;AACpB,KAAKA,SAAL,CAAiB,EAAjB;AACA,GAAI,CAAClD,MAAM,CAAC6E,WAAZ,CAAyB7E,MAAM,CAAC6E,WAAP,CAAqB,EAArB,CAHX;AAIK4I,MAAM,CAACC,MAAP,CAAc1N,MAAM,CAAC6E,WAArB,CAJL,wBAIuD,CAAhE,GAAMX,CAAAA,IAAI,WAAV;AACJ,GAAIA,IAAI,CAACrB,GAAL,EAAYqB,IAAI,CAACrB,GAAL,CAAW,KAAKA,GAAhC,CAAqC;AACrC,GAAI,CAACqB,IAAI,CAACyJ,UAAV,CAAsB;AACtB,KAAKzK,SAAL,CAAe5B,IAAf,CAAoB4C,IAAI,CAACzB,IAAzB;AACA;AACD,MAAO,MAAKS,SAAZ;AACA,C;;;AAGF,GAAI,MAAO0L,CAAAA,OAAP,GAAmB,UAAvB,CAAmC;;AAEjC3O,MAAD,CAAgB2C,GAAhB,CAAsBA,GAAtB;AACC3C,MAAD,CAAgBK,IAAhB,CAAuBA,IAAvB;AACA","sourcesContent":["/**\n * Pokemon Showdown Dex\n *\n * Roughly equivalent to sim/dex.js in a Pokemon Showdown server, but\n * designed for use in browsers rather than in Node.\n *\n * This is a generic utility library for Pokemon Showdown code: any\n * code shared between the replay viewer and the client usually ends up\n * here.\n *\n * Licensing note: PS's client has complicated licensing:\n * - The client as a whole is AGPLv3\n * - The battle replay/animation engine (battle-*.ts) by itself is MIT\n *\n * Compiled into battledata.js which includes all dependencies\n *\n * @author Guangcong Luo <guangcongluo@gmail.com>\n * @license MIT\n */\n\ndeclare var require: any;\ndeclare var global: any;\n\nif (typeof window === 'undefined') {\n\t// Node\n\t(global as any).window = global;\n} else {\n\t// browser (possibly NW.js!)\n\twindow.exports = window;\n}\n\n// @ts-ignore\nwindow.nodewebkit = !!(typeof process !== 'undefined' && process.versions && process.versions['node-webkit']);\n\nfunction toID(text: any) {\n\tif (text?.id) {\n\t\ttext = text.id;\n\t} else if (text?.userid) {\n\t\ttext = text.userid;\n\t}\n\tif (typeof text !== 'string' && typeof text !== 'number') return '' as ID;\n\treturn ('' + text).toLowerCase().replace(/[^a-z0-9]+/g, '') as ID;\n}\n\nfunction toUserid(text: any) {\n\treturn toID(text);\n}\n\ntype Comparable = number | string | boolean | Comparable[] | {reverse: Comparable};\nconst PSUtils = new class {\n\t/**\n\t * Like string.split(delimiter), but only recognizes the first `limit`\n\t * delimiters (default 1).\n\t *\n\t * `\"1 2 3 4\".split(\" \", 2) => [\"1\", \"2\"]`\n\t *\n\t * `splitFirst(\"1 2 3 4\", \" \", 1) => [\"1\", \"2 3 4\"]`\n\t *\n\t * Returns an array of length exactly limit + 1.\n\t */\n\tsplitFirst(str: string, delimiter: string, limit: number = 1) {\n\t\tlet splitStr: string[] = [];\n\t\twhile (splitStr.length < limit) {\n\t\t\tlet delimiterIndex = str.indexOf(delimiter);\n\t\t\tif (delimiterIndex >= 0) {\n\t\t\t\tsplitStr.push(str.slice(0, delimiterIndex));\n\t\t\t\tstr = str.slice(delimiterIndex + delimiter.length);\n\t\t\t} else {\n\t\t\t\tsplitStr.push(str);\n\t\t\t\tstr = '';\n\t\t\t}\n\t\t}\n\t\tsplitStr.push(str);\n\t\treturn splitStr;\n\t}\n\n\t/**\n\t * Compares two variables; intended to be used as a smarter comparator.\n\t * The two variables must be the same type (TypeScript will not check this).\n\t *\n\t * - Numbers are sorted low-to-high, use `-val` to reverse\n\t * - Strings are sorted A to Z case-semi-insensitively, use `{reverse: val}` to reverse\n\t * - Booleans are sorted true-first (REVERSE of casting to numbers), use `!val` to reverse\n\t * - Arrays are sorted lexically in the order of their elements\n\t *\n\t * In other words: `[num, str]` will be sorted A to Z, `[num, {reverse: str}]` will be sorted Z to A.\n\t */\n\tcompare(a: Comparable, b: Comparable): number {\n\t\tif (typeof a === 'number') {\n\t\t\treturn a - (b as number);\n\t\t}\n\t\tif (typeof a === 'string') {\n\t\t\treturn a.localeCompare(b as string);\n\t\t}\n\t\tif (typeof a === 'boolean') {\n\t\t\treturn (a ? 1 : 2) - (b ? 1 : 2);\n\t\t}\n\t\tif (Array.isArray(a)) {\n\t\t\tfor (let i = 0; i < a.length; i++) {\n\t\t\t\tconst comparison = PSUtils.compare(a[i], (b as Comparable[])[i]);\n\t\t\t\tif (comparison) return comparison;\n\t\t\t}\n\t\t\treturn 0;\n\t\t}\n\t\tif (a.reverse) {\n\t\t\treturn PSUtils.compare((b as {reverse: string}).reverse, a.reverse);\n\t\t}\n\t\tthrow new Error(`Passed value ${a} is not comparable`);\n\t}\n\t/**\n\t * Sorts an array according to the callback's output on its elements.\n\t *\n\t * The callback's output is compared according to `PSUtils.compare` (in\n\t * particular, it supports arrays so you can sort by multiple things).\n\t */\n\tsortBy<T>(array: T[], callback: (a: T) => Comparable): T[];\n\t/**\n\t * Sorts an array according to `PSUtils.compare`. (Correctly sorts numbers,\n\t * unlike `array.sort`)\n\t */\n\tsortBy<T extends Comparable>(array: T[]): T[];\n\tsortBy<T>(array: T[], callback?: (a: T) => Comparable) {\n\t\tif (!callback) return (array as any[]).sort(PSUtils.compare);\n\t\treturn array.sort((a, b) => PSUtils.compare(callback(a), callback(b)));\n\t}\n};\n\n/**\n * Sanitize a room ID by removing anything that isn't alphanumeric or `-`.\n * Shouldn't actually do anything except against malicious input.\n */\nfunction toRoomid(roomid: string) {\n\treturn roomid.replace(/[^a-zA-Z0-9-]+/g, '').toLowerCase();\n}\n\nfunction toName(name: any) {\n\tif (typeof name !== 'string' && typeof name !== 'number') return '';\n\tname = ('' + name).replace(/[\\|\\s\\[\\]\\,\\u202e]+/g, ' ').trim();\n\tif (name.length > 18) name = name.substr(0, 18).trim();\n\n\t// remove zalgo\n\tname = name.replace(\n\t\t/[\\u0300-\\u036f\\u0483-\\u0489\\u0610-\\u0615\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06ED\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E]{3,}/g,\n\t\t''\n\t);\n\tname = name.replace(/[\\u239b-\\u23b9]/g, '');\n\n\treturn name;\n}\n\ninterface SpriteData {\n\tw: number;\n\th: number;\n\ty?: number;\n\tgen?: number;\n\turl?: string;\n\trawHTML?: string;\n\tpixelated?: boolean;\n\tisFrontSprite?: boolean;\n\tcryurl?: string;\n\tshiny?: boolean;\n}\n\ninterface TeambuilderSpriteData {\n\tx: number;\n\ty: number;\n\tspriteDir: string;\n\tspriteid: string;\n\tshiny?: boolean;\n}\n\nconst Dex = new class implements ModdedDex {\n\treadonly gen = 8;\n\treadonly modid = 'gen8' as ID;\n\treadonly cache = null!;\n\n\treadonly statNames: ReadonlyArray<StatName> = ['hp', 'atk', 'def', 'spa', 'spd', 'spe'];\n\treadonly statNamesExceptHP: ReadonlyArray<StatNameExceptHP> = ['atk', 'def', 'spa', 'spd', 'spe'];\n\n\tpokeballs: string[] | null = null;\n\n\tresourcePrefix = (() => {\n\t\tlet prefix = '';\n\t\tif (window.document?.location?.protocol !== 'http:') prefix = 'https:';\n\t\treturn `${prefix}//play.pokemonshowdown.com/`;\n\t\t// `${prefix}//${window.Config ? Config.routes.client : 'play.pokemonshowdown.com'}/`;\n\t})();\n\n\tfxPrefix = (() => {\n\t\tconst protocol = (window.document?.location?.protocol !== 'http:') ? 'https:' : '';\n\t\treturn `${protocol}//play.pokemonshowdown.com/fx/`;\n\t\t// `${protocol}//${window.Config ? Config.routes.client : 'play.pokemonshowdown.com'}/fx/`;\n\t})();\n\n\tloadedSpriteData = {xy: 1, bw: 0};\n\tmoddedDexes: {[mod: string]: ModdedDex} = {};\n\n\tmod(modid: ID): ModdedDex {\n\t\tif (modid === 'gen8') return this;\n\t\tif (!window.BattleTeambuilderTable) return this;\n\t\tif (modid in this.moddedDexes) {\n\t\t\treturn this.moddedDexes[modid];\n\t\t}\n\t\tthis.moddedDexes[modid] = new ModdedDex(modid);\n\t\treturn this.moddedDexes[modid];\n\t}\n\tforGen(gen: number) {\n\t\tif (!gen) return this;\n\t\treturn this.mod(`gen${gen}` as ID);\n\t}\n\n\tresolveAvatar(avatar: string): string {\n\t\tif (window.BattleAvatarNumbers && avatar in BattleAvatarNumbers) {\n\t\t\tavatar = BattleAvatarNumbers[avatar];\n\t\t}\n\t\tif (avatar.charAt(0) === '#') {\n\t\t\treturn Dex.resourcePrefix + 'sprites/trainers-custom/' + toID(avatar.substr(1)) + '.png';\n\t\t}\n\t\tif (avatar.includes('.') && window.Config?.server?.registered) {\n\t\t\t// custom avatar served by the server\n\t\t\tlet protocol = (Config.server.port === 443) ? 'https' : 'http';\n\t\t\treturn protocol + '://' + Config.server.host + ':' + Config.server.port +\n\t\t\t\t'/avatars/' + encodeURIComponent(avatar).replace(/\\%3F/g, '?');\n\t\t}\n\t\treturn Dex.resourcePrefix + 'sprites/trainers/' + Dex.sanitizeName(avatar || 'unknown') + '.png';\n\t}\n\n\t/**\n\t * This is used to sanitize strings from data files like `moves.js` and\n\t * `teambuilder-tables.js`.\n\t *\n\t * This makes sure untrusted strings can't wreak havoc if someone forgets to\n\t * escape it before putting it in HTML.\n\t *\n\t * None of these characters belong in these files, anyway. (They can be used\n\t * in move descriptions, but those are served from `text.js`, which are\n\t * definitely always treated as unsanitized.)\n\t */\n\tsanitizeName(name: any) {\n\t\tif (!name) return '';\n\t\treturn ('' + name)\n\t\t\t.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;')\n\t\t\t.slice(0, 50);\n\t}\n\n\tprefs(prop: string) {\n\t\t// @ts-ignore\n\t\treturn window.Storage?.prefs?.(prop);\n\t}\n\n\tgetShortName(name: string) {\n\t\tlet shortName = name.replace(/[^A-Za-z0-9]+$/, '');\n\t\tif (shortName.indexOf('(') >= 0) {\n\t\t\tshortName += name.slice(shortName.length).replace(/[^\\(\\)]+/g, '').replace(/\\(\\)/g, '');\n\t\t}\n\t\treturn shortName;\n\t}\n\n\tgetEffect(name: string | null | undefined): PureEffect | Item | Ability | Move {\n\t\tname = (name || '').trim();\n\t\tif (name.substr(0, 5) === 'item:') {\n\t\t\treturn Dex.items.get(name.substr(5).trim());\n\t\t} else if (name.substr(0, 8) === 'ability:') {\n\t\t\treturn Dex.abilities.get(name.substr(8).trim());\n\t\t} else if (name.substr(0, 5) === 'move:') {\n\t\t\treturn Dex.moves.get(name.substr(5).trim());\n\t\t}\n\t\tlet id = toID(name);\n\t\treturn new PureEffect(id, name);\n\t}\n\n\tmoves = {\n\t\tget: (nameOrMove: string | Move | null | undefined): Move => {\n\t\t\tif (nameOrMove && typeof nameOrMove !== 'string') {\n\t\t\t\t// TODO: don't accept Moves here\n\t\t\t\treturn nameOrMove;\n\t\t\t}\n\t\t\tlet name = nameOrMove || '';\n\t\t\tlet id = toID(nameOrMove);\n\t\t\tif (window.BattleAliases && id in BattleAliases) {\n\t\t\t\tname = BattleAliases[id];\n\t\t\t\tid = toID(name);\n\t\t\t}\n\t\t\tif (!window.BattleMovedex) window.BattleMovedex = {};\n\t\t\tlet data = window.BattleMovedex[id];\n\t\t\tif (data && typeof data.exists === 'boolean') return data;\n\n\t\t\tif (!data && id.substr(0, 11) === 'hiddenpower' && id.length > 11) {\n\t\t\t\tlet [, hpWithType, hpPower] = /([a-z]*)([0-9]*)/.exec(id)!;\n\t\t\t\tdata = {\n\t\t\t\t\t...(window.BattleMovedex[hpWithType] || {}),\n\t\t\t\t\tbasePower: Number(hpPower) || 60,\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (!data && id.substr(0, 6) === 'return' && id.length > 6) {\n\t\t\t\tdata = {\n\t\t\t\t\t...(window.BattleMovedex['return'] || {}),\n\t\t\t\t\tbasePower: Number(id.slice(6)),\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (!data && id.substr(0, 11) === 'frustration' && id.length > 11) {\n\t\t\t\tdata = {\n\t\t\t\t\t...(window.BattleMovedex['frustration'] || {}),\n\t\t\t\t\tbasePower: Number(id.slice(11)),\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (!data) data = {exists: false};\n\t\t\tlet move = new Move(id, name, data);\n\t\t\twindow.BattleMovedex[id] = move;\n\t\t\treturn move;\n\t\t},\n\t};\n\n\tgetGen3Category(type: string) {\n\t\treturn [\n\t\t\t'Fire', 'Water', 'Grass', 'Electric', 'Ice', 'Psychic', 'Dark', 'Dragon',\n\t\t].includes(type) ? 'Special' : 'Physical';\n\t}\n\n\titems = {\n\t\tget: (nameOrItem: string | Item | null | undefined): Item => {\n\t\t\tif (nameOrItem && typeof nameOrItem !== 'string') {\n\t\t\t\t// TODO: don't accept Items here\n\t\t\t\treturn nameOrItem;\n\t\t\t}\n\t\t\tlet name = nameOrItem || '';\n\t\t\tlet id = toID(nameOrItem);\n\t\t\tif (window.BattleAliases && id in BattleAliases) {\n\t\t\t\tname = BattleAliases[id];\n\t\t\t\tid = toID(name);\n\t\t\t}\n\t\t\tif (!window.BattleItems) window.BattleItems = {};\n\t\t\tlet data = window.BattleItems[id];\n\t\t\tif (data && typeof data.exists === 'boolean') return data;\n\t\t\tif (!data) data = {exists: false};\n\t\t\tlet item = new Item(id, name, data);\n\t\t\twindow.BattleItems[id] = item;\n\t\t\treturn item;\n\t\t},\n\t};\n\n\tabilities = {\n\t\tget: (nameOrAbility: string | Ability | null | undefined): Ability => {\n\t\t\tif (nameOrAbility && typeof nameOrAbility !== 'string') {\n\t\t\t\t// TODO: don't accept Abilities here\n\t\t\t\treturn nameOrAbility;\n\t\t\t}\n\t\t\tlet name = nameOrAbility || '';\n\t\t\tlet id = toID(nameOrAbility);\n\t\t\tif (window.BattleAliases && id in BattleAliases) {\n\t\t\t\tname = BattleAliases[id];\n\t\t\t\tid = toID(name);\n\t\t\t}\n\t\t\tif (!window.BattleAbilities) window.BattleAbilities = {};\n\t\t\tlet data = window.BattleAbilities[id];\n\t\t\tif (data && typeof data.exists === 'boolean') return data;\n\t\t\tif (!data) data = {exists: false};\n\t\t\tlet ability = new Ability(id, name, data);\n\t\t\twindow.BattleAbilities[id] = ability;\n\t\t\treturn ability;\n\t\t},\n\t};\n\n\tspecies = {\n\t\tget: (nameOrSpecies: string | Species | null | undefined): Species => {\n\t\t\tif (nameOrSpecies && typeof nameOrSpecies !== 'string') {\n\t\t\t\t// TODO: don't accept Species' here\n\t\t\t\treturn nameOrSpecies;\n\t\t\t}\n\t\t\tlet name = nameOrSpecies || '';\n\t\t\tlet id = toID(nameOrSpecies);\n\t\t\tlet formid = id;\n\t\t\tif (!window.BattlePokedexAltForms) window.BattlePokedexAltForms = {};\n\t\t\tif (formid in window.BattlePokedexAltForms) return window.BattlePokedexAltForms[formid];\n\t\t\tif (window.BattleAliases && id in BattleAliases) {\n\t\t\t\tname = BattleAliases[id];\n\t\t\t\tid = toID(name);\n\t\t\t} else if (window.BattlePokedex && !(id in BattlePokedex) && window.BattleBaseSpeciesChart) {\n\t\t\t\tfor (const baseSpeciesId of BattleBaseSpeciesChart) {\n\t\t\t\t\tif (formid.startsWith(baseSpeciesId)) {\n\t\t\t\t\t\tid = baseSpeciesId;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!window.BattlePokedex) window.BattlePokedex = {};\n\t\t\tlet data = window.BattlePokedex[id];\n\n\t\t\tlet species: Species;\n\t\t\tif (data && typeof data.exists === 'boolean') {\n\t\t\t\tspecies = data;\n\t\t\t} else {\n\t\t\t\tif (!data) data = {exists: false};\n\t\t\t\tif (!data.tier && id.slice(-5) === 'totem') {\n\t\t\t\t\tdata.tier = this.species.get(id.slice(0, -5)).tier;\n\t\t\t\t}\n\t\t\t\tif (!data.tier && data.baseSpecies && toID(data.baseSpecies) !== id) {\n\t\t\t\t\tdata.tier = this.species.get(data.baseSpecies).tier;\n\t\t\t\t}\n\t\t\t\tspecies = new Species(id, name, data);\n\t\t\t\twindow.BattlePokedex[id] = species;\n\t\t\t}\n\n\t\t\tif (species.cosmeticFormes) {\n\t\t\t\tfor (const forme of species.cosmeticFormes) {\n\t\t\t\t\tif (toID(forme) === formid) {\n\t\t\t\t\t\tspecies = new Species(formid, name, {\n\t\t\t\t\t\t\t...species,\n\t\t\t\t\t\t\tname: forme,\n\t\t\t\t\t\t\tforme: forme.slice(species.name.length + 1),\n\t\t\t\t\t\t\tbaseForme: \"\",\n\t\t\t\t\t\t\tbaseSpecies: species.name,\n\t\t\t\t\t\t\totherFormes: null,\n\t\t\t\t\t\t});\n\t\t\t\t\t\twindow.BattlePokedexAltForms[formid] = species;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn species;\n\t\t},\n\t};\n\n\ttypes = {\n\t\tallCache: null as Type[] | null,\n\t\tget: (type: any): Type => {\n\t\t\tif (!type || typeof type === 'string') {\n\t\t\t\tconst id = toID(type) as string;\n\t\t\t\tconst name = id.substr(0, 1).toUpperCase() + id.substr(1);\n\t\t\t\ttype = (window.BattleTypeChart && window.BattleTypeChart[id]) || {};\n\t\t\t\tif (type.damageTaken) type.exists = true;\n\t\t\t\tif (!type.id) type.id = id;\n\t\t\t\tif (!type.name) type.name = name;\n\t\t\t\tif (!type.effectType) {\n\t\t\t\t\ttype.effectType = 'Type';\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn type;\n\t\t},\n\t\tall: (): readonly Type[] => {\n\t\t\tif (this.types.allCache) return this.types.allCache;\n\t\t\tconst types = [];\n\t\t\tfor (const id in (window.BattleTypeChart || {})) {\n\t\t\t\ttypes.push(Dex.types.get(id));\n\t\t\t}\n\t\t\tif (types.length) this.types.allCache = types;\n\t\t\treturn types;\n\t\t},\n\t\tisName: (name: string | null): boolean => {\n\t\t\tconst id = toID(name);\n\t\t\tif (name !== id.substr(0, 1).toUpperCase() + id.substr(1)) return false;\n\t\t\treturn (window.BattleTypeChart || {}).hasOwnProperty(id);\n\t\t},\n\t};\n\n\thasAbility(species: Species, ability: string) {\n\t\tfor (const i in species.abilities) {\n\t\t\t// @ts-ignore\n\t\t\tif (ability === species.abilities[i]) return true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tloadSpriteData(gen: 'xy' | 'bw') {\n\t\tif (this.loadedSpriteData[gen]) return;\n\t\tthis.loadedSpriteData[gen] = 1;\n\n\t\tlet path = $('script[src*=\"pokedex-mini.js\"]').attr('src') || '';\n\t\tlet qs = '?' + (path.split('?')[1] || '');\n\t\tpath = (path.match(/.+?(?=data\\/pokedex-mini\\.js)/) || [])[0] || '';\n\n\t\tlet el = document.createElement('script');\n\t\tel.src = path + 'data/pokedex-mini-bw.js' + qs;\n\t\tdocument.getElementsByTagName('body')[0].appendChild(el);\n\t}\n\tgetSpriteData(pokemon: Pokemon | Species | string, isFront: boolean, options: {\n\t\tgen?: number,\n\t\tshiny?: boolean,\n\t\tgender?: GenderName,\n\t\tafd?: boolean,\n\t\tnoScale?: boolean,\n\t\tmod?: string,\n\t\tdynamax?: boolean,\n\t} = {gen: 6}) {\n\t\tconst mechanicsGen = options.gen || 6;\n\t\tlet isDynamax = !!options.dynamax;\n\t\tif (pokemon instanceof Pokemon) {\n\t\t\tif (pokemon.volatiles.transform) {\n\t\t\t\toptions.shiny = pokemon.volatiles.transform[2];\n\t\t\t\toptions.gender = pokemon.volatiles.transform[3];\n\t\t\t} else {\n\t\t\t\toptions.shiny = pokemon.shiny;\n\t\t\t\toptions.gender = pokemon.gender;\n\t\t\t}\n\t\t\tif (pokemon.volatiles.dynamax && options.dynamax !== false) isDynamax = true;\n\t\t\tpokemon = pokemon.getSpeciesForme();\n\t\t}\n\t\tconst species = Dex.species.get(pokemon);\n\t\t// Gmax sprites are already extremely large, so we don't need to double.\n\t\tif (species.name.endsWith('-Gmax')) isDynamax = false;\n\t\tlet spriteData = {\n\t\t\tgen: mechanicsGen,\n\t\t\tw: 96,\n\t\t\th: 96,\n\t\t\ty: 0,\n\t\t\turl: Dex.resourcePrefix + 'sprites/',\n\t\t\tpixelated: true,\n\t\t\tisFrontSprite: false,\n\t\t\tcryurl: '',\n\t\t\tshiny: options.shiny,\n\t\t};\n\t\tlet name = species.spriteid;\n\t\tlet dir;\n\t\tlet facing;\n\t\tif (isFront) {\n\t\t\tspriteData.isFrontSprite = true;\n\t\t\tdir = '';\n\t\t\tfacing = 'front';\n\t\t} else {\n\t\t\tdir = '-back';\n\t\t\tfacing = 'back';\n\t\t}\n\n\t\t// Decide which gen sprites to use.\n\t\t//\n\t\t// There are several different generations we care about here:\n\t\t//\n\t\t//   - mechanicsGen: the generation number of the mechanics and battle (options.gen)\n\t\t//   - graphicsGen: the generation number of sprite/field graphics the user has requested.\n\t\t//     This will default to mechanicsGen, but may be altered depending on user preferences.\n\t\t//   - spriteData.gen: the generation number of a the specific Pokemon sprite in question.\n\t\t//     This defaults to graphicsGen, but if the graphicsGen doesn't have a sprite for the Pokemon\n\t\t//     (eg. Darmanitan in graphicsGen 2) then we go up gens until it exists.\n\t\t//\n\t\tlet graphicsGen = mechanicsGen;\n\t\tif (Dex.prefs('nopastgens')) graphicsGen = 6;\n\t\tif (Dex.prefs('bwgfx') && graphicsGen >= 6) graphicsGen = 5;\n\t\tspriteData.gen = Math.max(graphicsGen, Math.min(species.gen, 5));\n\t\tconst baseDir = ['', 'gen1', 'gen2', 'gen3', 'gen4', 'gen5', '', '', '', ''][spriteData.gen];\n\n\t\tlet animationData = null;\n\t\tlet miscData = null;\n\t\tlet speciesid = species.id;\n\t\tif (species.isTotem) speciesid = toID(name);\n\t\tif (baseDir === '' && window.BattlePokemonSprites) {\n\t\t\tanimationData = BattlePokemonSprites[speciesid];\n\t\t}\n\t\tif (baseDir === 'gen5' && window.BattlePokemonSpritesBW) {\n\t\t\tanimationData = BattlePokemonSpritesBW[speciesid];\n\t\t}\n\t\tif (window.BattlePokemonSprites) miscData = BattlePokemonSprites[speciesid];\n\t\tif (!miscData && window.BattlePokemonSpritesBW) miscData = BattlePokemonSpritesBW[speciesid];\n\t\tif (!animationData) animationData = {};\n\t\tif (!miscData) miscData = {};\n\n\t\tif (miscData.num !== 0 && miscData.num > -5000) {\n\t\t\tlet baseSpeciesid = toID(species.baseSpecies);\n\t\t\tspriteData.cryurl = 'audio/cries/' + baseSpeciesid;\n\t\t\tlet formeid = species.formeid;\n\t\t\tif (species.isMega || formeid && (\n\t\t\t\tformeid === '-crowned' ||\n\t\t\t\tformeid === '-eternal' ||\n\t\t\t\tformeid === '-eternamax' ||\n\t\t\t\tformeid === '-hangry' ||\n\t\t\t\tformeid === '-lowkey' ||\n\t\t\t\tformeid === '-noice' ||\n\t\t\t\tformeid === '-primal' ||\n\t\t\t\tformeid === '-rapidstrike' ||\n\t\t\t\tformeid === '-school' ||\n\t\t\t\tformeid === '-sky' ||\n\t\t\t\tformeid === '-starter' ||\n\t\t\t\tformeid === '-super' ||\n\t\t\t\tformeid === '-therian' ||\n\t\t\t\tformeid === '-unbound' ||\n\t\t\t\tbaseSpeciesid === 'calyrex' ||\n\t\t\t\tbaseSpeciesid === 'kyurem' ||\n\t\t\t\tbaseSpeciesid === 'cramorant' ||\n\t\t\t\tbaseSpeciesid === 'indeedee' ||\n\t\t\t\tbaseSpeciesid === 'lycanroc' ||\n\t\t\t\tbaseSpeciesid === 'necrozma' ||\n\t\t\t\tbaseSpeciesid === 'oricorio' ||\n\t\t\t\tbaseSpeciesid === 'slowpoke' ||\n\t\t\t\tbaseSpeciesid === 'zygarde'\n\t\t\t)) {\n\t\t\t\tspriteData.cryurl += formeid;\n\t\t\t}\n\t\t\tspriteData.cryurl += '.mp3';\n\t\t}\n\n\t\tif (options.shiny && mechanicsGen > 1) dir += '-shiny';\n\n\t\t// April Fool's 2014\n\t\tif (window.Config && Config.server && Config.server.afd || options.afd) {\n\t\t\tdir = 'afd' + dir;\n\t\t\tspriteData.url += dir + '/' + name + '.png';\n\t\t\t// Duplicate code but needed to make AFD tinymax work\n\t\t\t// April Fool's 2020\n\t\t\tif (isDynamax && !options.noScale) {\n\t\t\t\tspriteData.w *= 0.25;\n\t\t\t\tspriteData.h *= 0.25;\n\t\t\t\tspriteData.y += -22;\n\t\t\t} else if (species.isTotem && !options.noScale) {\n\t\t\t\tspriteData.w *= 0.5;\n\t\t\t\tspriteData.h *= 0.5;\n\t\t\t\tspriteData.y += -11;\n\t\t\t}\n\t\t\treturn spriteData;\n\t\t}\n\n\t\t// Mod Cries\n\t\tif (options.mod) {\n\t\t\tspriteData.cryurl = `sprites/${options.mod}/audio/${toID(species.baseSpecies)}`;\n\t\t\tspriteData.cryurl += '.mp3';\n\t\t}\n\n\t\tif (animationData[facing + 'f'] && options.gender === 'F') facing += 'f';\n\t\tlet allowAnim = !Dex.prefs('noanim') && !Dex.prefs('nogif');\n\t\tif (allowAnim && spriteData.gen >= 6) spriteData.pixelated = false;\n\t\tif (species.formeid === '-hisui' || (species.num && species.num > 898) ||\n\t\t\t\t(species.formeid === '-origin' && species.num < 485)) {\n\t\t\tif ([215, 902].includes(species.num) && options.gender === 'F') {\n\t\t\t\tspriteData.url = `https://swagpc.github.io/sprites/pla/0${species.num}f.png`;\n\t\t\t} else if (species.num === 905 && species.formeid === '-therian') {\n\t\t\t\tspriteData.url = `https://swagpc.github.io/sprites/pla/0${species.num}t.png`;\n\t\t\t} else {\n\t\t\t\tspriteData.url = `https://swagpc.github.io/sprites/pla/0${species.num}.png`;\n\t\t\t}\n\t\t} else if (allowAnim && animationData[facing] && spriteData.gen >= 5) {\n\t\t\tif (facing.slice(-1) === 'f') name += '-f';\n\t\t\tdir = baseDir + 'ani' + dir;\n\n\t\t\tspriteData.w = animationData[facing].w;\n\t\t\tspriteData.h = animationData[facing].h;\n\t\t\tspriteData.url += dir + '/' + name + '.gif';\n\t\t} else {\n\t\t\t// There is no entry or enough data in pokedex-mini.js\n\t\t\t// Handle these in case-by-case basis; either using BW sprites or matching the played gen.\n\t\t\tdir = (baseDir || 'gen5') + dir;\n\n\t\t\t// Gender differences don't exist prior to Gen 4,\n\t\t\t// so there are no sprites for it\n\t\t\tif (spriteData.gen >= 4 && miscData['frontf'] && options.gender === 'F') {\n\t\t\t\tname += '-f';\n\t\t\t}\n\n\t\t\tspriteData.url += dir + '/' + name + '.png';\n\t\t}\n\n\t\tif (!options.noScale) {\n\t\t\tif (graphicsGen > 4) {\n\t\t\t\t// no scaling\n\t\t\t} else if (spriteData.isFrontSprite) {\n\t\t\t\tspriteData.w *= 2;\n\t\t\t\tspriteData.h *= 2;\n\t\t\t\tspriteData.y += -16;\n\t\t\t} else {\n\t\t\t\t// old gen backsprites are multiplied by 1.5x by the 3D engine\n\t\t\t\tspriteData.w *= 2 / 1.5;\n\t\t\t\tspriteData.h *= 2 / 1.5;\n\t\t\t\tspriteData.y += -11;\n\t\t\t}\n\t\t\tif (spriteData.gen <= 2) spriteData.y += 2;\n\t\t}\n\t\tif (isDynamax && !options.noScale) {\n\t\t\tspriteData.w *= 2;\n\t\t\tspriteData.h *= 2;\n\t\t\tspriteData.y += -22;\n\t\t} else if (species.isTotem && !options.noScale) {\n\t\t\tspriteData.w *= 1.5;\n\t\t\tspriteData.h *= 1.5;\n\t\t\tspriteData.y += -11;\n\t\t}\n\n\t\treturn spriteData;\n\t}\n\n\tgetPokemonIconNum(id: ID, isFemale?: boolean, facingLeft?: boolean) {\n\t\tlet num = 0;\n\t\tif (window.BattlePokemonSprites?.[id]?.num) {\n\t\t\tnum = BattlePokemonSprites[id].num;\n\t\t} else if (window.BattlePokedex?.[id]?.num) {\n\t\t\tnum = BattlePokedex[id].num;\n\t\t}\n\t\tif (num < 0) num = 0;\n\t\tif (num > 905) num = 0;\n\n\t\tif (window.BattlePokemonIconIndexes?.[id]) {\n\t\t\tnum = BattlePokemonIconIndexes[id];\n\t\t}\n\n\t\tif (isFemale) {\n\t\t\tif (['unfezant', 'frillish', 'jellicent', 'meowstic', 'pyroar'].includes(id)) {\n\t\t\t\tnum = BattlePokemonIconIndexes[id + 'f'];\n\t\t\t}\n\t\t}\n\t\tif (facingLeft) {\n\t\t\tif (BattlePokemonIconIndexesLeft[id]) {\n\t\t\t\tnum = BattlePokemonIconIndexesLeft[id];\n\t\t\t}\n\t\t}\n\t\treturn num;\n\t}\n\n\tgetPokemonIcon(pokemon: string | Pokemon | ServerPokemon | PokemonSet | null, facingLeft?: boolean) {\n\t\tif (pokemon === 'pokeball') {\n\t\t\treturn `background:transparent url(${Dex.resourcePrefix}sprites/pokemonicons-pokeball-sheet.png) no-repeat scroll -0px 4px`;\n\t\t} else if (pokemon === 'pokeball-statused') {\n\t\t\treturn `background:transparent url(${Dex.resourcePrefix}sprites/pokemonicons-pokeball-sheet.png) no-repeat scroll -40px 4px`;\n\t\t} else if (pokemon === 'pokeball-fainted') {\n\t\t\treturn `background:transparent url(${Dex.resourcePrefix}sprites/pokemonicons-pokeball-sheet.png) no-repeat scroll -80px 4px;opacity:.4;filter:contrast(0)`;\n\t\t} else if (pokemon === 'pokeball-none') {\n\t\t\treturn `background:transparent url(${Dex.resourcePrefix}sprites/pokemonicons-pokeball-sheet.png) no-repeat scroll -80px 4px`;\n\t\t}\n\n\t\tlet id = toID(pokemon);\n\t\tif (!pokemon || typeof pokemon === 'string') pokemon = null;\n\t\t// @ts-ignore\n\t\tif (pokemon?.speciesForme) id = toID(pokemon.speciesForme);\n\t\t// @ts-ignore\n\t\tif (pokemon?.species) id = toID(pokemon.species);\n\t\t// @ts-ignore\n\t\tif (pokemon?.volatiles?.formechange && !pokemon.volatiles.transform) {\n\t\t\t// @ts-ignore\n\t\t\tid = toID(pokemon.volatiles.formechange[1]);\n\t\t}\n\t\tlet num = this.getPokemonIconNum(id, pokemon?.gender === 'F', facingLeft);\n\n\t\tlet top = Math.floor(num / 12) * 30;\n\t\tlet left = (num % 12) * 40;\n\t\tlet fainted = ((pokemon as Pokemon | ServerPokemon)?.fainted ? `;opacity:.3;filter:grayscale(100%) brightness(.5)` : ``);\n\t\treturn `background:transparent url(${Dex.resourcePrefix}sprites/pokemonicons-sheet.png?v7) no-repeat scroll -${left}px -${top}px${fainted}`;\n\t}\n\n\tgetTeambuilderSpriteData(pokemon: any, gen: number = 0): TeambuilderSpriteData {\n\t\tlet id = toID(pokemon.species);\n\t\tlet spriteid = pokemon.spriteid;\n\t\tlet species = Dex.species.get(pokemon.species);\n\t\tif (pokemon.species && !spriteid) {\n\t\t\tspriteid = species.spriteid || toID(pokemon.species);\n\t\t}\n\t\tif (species.exists === false) return { spriteDir: 'sprites/gen5', spriteid: '0', x: 10, y: 5 };\n\t\tconst spriteData: TeambuilderSpriteData = {\n\t\t\tspriteid,\n\t\t\tspriteDir: 'sprites/dex',\n\t\t\tx: -2,\n\t\t\ty: -3,\n\t\t};\n\t\tif (pokemon.shiny) spriteData.shiny = true;\n\t\tif (Dex.prefs('nopastgens')) gen = 6;\n\t\tif (Dex.prefs('bwgfx') && gen > 5) gen = 5;\n\t\tlet xydexExists = (!species.isNonstandard || species.isNonstandard === 'Past' || species.isNonstandard === 'CAP') || [\n\t\t\t\"pikachustarter\", \"eeveestarter\", \"meltan\", \"melmetal\", \"pokestarufo\", \"pokestarufo2\", \"pokestarbrycenman\", \"pokestarmt\", \"pokestarmt2\", \"pokestargiant\", \"pokestarhumanoid\", \"pokestarmonster\", \"pokestarf00\", \"pokestarf002\", \"pokestarspirit\",\n\t\t].includes(species.id);\n\t\tif (species.gen === 8 && species.isNonstandard !== 'CAP') xydexExists = false;\n\t\tif ((!gen || gen >= 6) && xydexExists) {\n\t\t\tif (species.gen >= 7) {\n\t\t\t\tspriteData.x = -6;\n\t\t\t\tspriteData.y = -7;\n\t\t\t} else if (id.substr(0, 6) === 'arceus') {\n\t\t\t\tspriteData.x = -2;\n\t\t\t\tspriteData.y = 7;\n\t\t\t} else if (id === 'garchomp') {\n\t\t\t\tspriteData.x = -2;\n\t\t\t\tspriteData.y = 2;\n\t\t\t} else if (id === 'garchompmega') {\n\t\t\t\tspriteData.x = -2;\n\t\t\t\tspriteData.y = 0;\n\t\t\t}\n\t\t\treturn spriteData;\n\t\t}\n\t\tspriteData.spriteDir = 'sprites/gen5';\n\t\tif (gen <= 1 && species.gen <= 1) spriteData.spriteDir = 'sprites/gen1';\n\t\telse if (gen <= 2 && species.gen <= 2) spriteData.spriteDir = 'sprites/gen2';\n\t\telse if (gen <= 3 && species.gen <= 3) spriteData.spriteDir = 'sprites/gen3';\n\t\telse if (gen <= 4 && species.gen <= 4) spriteData.spriteDir = 'sprites/gen4';\n\t\tspriteData.x = 10;\n\t\tspriteData.y = 5;\n\t\treturn spriteData;\n\t}\n\n\tgetTeambuilderSprite(pokemon: any, gen: number = 0) {\n\t\tif (!pokemon) return '';\n\t\tconst data = this.getTeambuilderSpriteData(pokemon, gen);\n\t\tconst shiny = (data.shiny ? '-shiny' : '');\n\t\treturn 'background-image:url(' + Dex.resourcePrefix + data.spriteDir + shiny + '/' + data.spriteid + '.png);background-position:' + data.x + 'px ' + data.y + 'px;background-repeat:no-repeat';\n\t}\n\n\tgetItemIcon(item: any) {\n\t\tlet num = 0;\n\t\tif (typeof item === 'string' && exports.BattleItems) item = exports.BattleItems[toID(item)];\n\t\tif (item?.spritenum) num = item.spritenum;\n\n\t\tlet top = Math.floor(num / 16) * 24;\n\t\tlet left = (num % 16) * 24;\n\t\treturn 'background:transparent url(' + Dex.resourcePrefix + 'sprites/itemicons-sheet.png?g8) no-repeat scroll -' + left + 'px -' + top + 'px';\n\t}\n\n\tgetTypeIcon(type: string | null, b?: boolean) { // b is just for utilichart.js\n\t\ttype = this.types.get(type).name;\n\t\tif (!type) type = '???';\n\t\tlet sanitizedType = type.replace(/\\?/g, '%3f');\n\t\treturn `<img src=\"${Dex.resourcePrefix}sprites/types/${sanitizedType}.png\" alt=\"${type}\" height=\"14\" width=\"32\" class=\"pixelated${b ? ' b' : ''}\" />`;\n\t}\n\n\tgetCategoryIcon(category: string | null) {\n\t\tconst categoryID = toID(category);\n\t\tlet sanitizedCategory = '';\n\t\tswitch (categoryID) {\n\t\tcase 'physical':\n\t\tcase 'special':\n\t\tcase 'status':\n\t\t\tsanitizedCategory = categoryID.charAt(0).toUpperCase() + categoryID.slice(1);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tsanitizedCategory = 'undefined';\n\t\t\tbreak;\n\t\t}\n\t\treturn `<img src=\"${Dex.resourcePrefix}sprites/categories/${sanitizedCategory}.png\" alt=\"${sanitizedCategory}\" height=\"14\" width=\"32\" class=\"pixelated\" />`;\n\t}\n\n\tgetPokeballs() {\n\t\tif (this.pokeballs) return this.pokeballs;\n\t\tthis.pokeballs = [];\n\t\tif (!window.BattleItems) window.BattleItems = {};\n\t\tfor (const data of Object.values(window.BattleItems) as AnyObject[]) {\n\t\t\tif (!data.isPokeball) continue;\n\t\t\tthis.pokeballs.push(data.name);\n\t\t}\n\t\treturn this.pokeballs;\n\t}\n};\n\nclass ModdedDex {\n\treadonly gen: number;\n\treadonly modid: ID;\n\treadonly cache = {\n\t\tMoves: {} as any as {[k: string]: Move},\n\t\tItems: {} as any as {[k: string]: Item},\n\t\tAbilities: {} as any as {[k: string]: Ability},\n\t\tSpecies: {} as any as {[k: string]: Species},\n\t\tTypes: {} as any as {[k: string]: Effect},\n\t};\n\tpokeballs: string[] | null = null;\n\tconstructor(modid: ID) {\n\t\tthis.modid = modid;\n\t\tconst gen = parseInt(modid.substr(3, 1), 10);\n\t\tif (!modid.startsWith('gen') || !gen) throw new Error(\"Unsupported modid\");\n\t\tthis.gen = gen;\n\t}\n\tmoves = {\n\t\tget: (name: string): Move => {\n\t\t\tlet id = toID(name);\n\t\t\tif (window.BattleAliases && id in BattleAliases) {\n\t\t\t\tname = BattleAliases[id];\n\t\t\t\tid = toID(name);\n\t\t\t}\n\t\t\tif (this.cache.Moves.hasOwnProperty(id)) return this.cache.Moves[id];\n\n\t\t\tlet data = {...Dex.moves.get(name)};\n\n\t\t\tfor (let i = Dex.gen - 1; i >= this.gen; i--) {\n\t\t\t\tconst table = window.BattleTeambuilderTable[`gen${i}`];\n\t\t\t\tif (id in table.overrideMoveData) {\n\t\t\t\t\tObject.assign(data, table.overrideMoveData[id]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this.modid !== `gen${this.gen}`) {\n\t\t\t\tlet tname = this.modid;\n\t\t\t\t// if (tname?.includes('supernatdex')) tname = 'snatdex';\n\t\t\t\t// else if (tname?.includes('natdex')) tname = 'natdex';\n\t\t\t\t// else if (tname?.includes('swagmons')) tname = 'swagmons';\n\t\t\t\tconst table = window.BattleTeambuilderTable[tname];\n\t\t\t\tif (id in table.overrideMoveData) {\n\t\t\t\t\tObject.assign(data, table.overrideMoveData[id]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this.gen <= 3 && data.category !== 'Status') {\n\t\t\t\tdata.category = Dex.getGen3Category(data.type);\n\t\t\t}\n\n\t\t\tconst move = new Move(id, name, data);\n\t\t\tthis.cache.Moves[id] = move;\n\t\t\treturn move;\n\t\t},\n\t};\n\n\titems = {\n\t\tget: (name: string): Item => {\n\t\t\tlet id = toID(name);\n\t\t\tif (window.BattleAliases && id in BattleAliases) {\n\t\t\t\tname = BattleAliases[id];\n\t\t\t\tid = toID(name);\n\t\t\t}\n\t\t\tif (this.cache.Items.hasOwnProperty(id)) return this.cache.Items[id];\n\n\t\t\tlet data = {...Dex.items.get(name)};\n\n\t\t\tfor (let i = this.gen; i < 8; i++) {\n\t\t\t\tconst table = window.BattleTeambuilderTable['gen' + i];\n\t\t\t\tif (id in table.overrideItemDesc) {\n\t\t\t\t\tdata.shortDesc = table.overrideItemDesc[id];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst item = new Item(id, name, data);\n\t\t\tthis.cache.Items[id] = item;\n\t\t\treturn item;\n\t\t},\n\t};\n\n\tabilities = {\n\t\tget: (name: string): Ability => {\n\t\t\tlet id = toID(name);\n\t\t\tif (window.BattleAliases && id in BattleAliases) {\n\t\t\t\tname = BattleAliases[id];\n\t\t\t\tid = toID(name);\n\t\t\t}\n\t\t\tif (this.cache.Abilities.hasOwnProperty(id)) return this.cache.Abilities[id];\n\n\t\t\tlet data = {...Dex.abilities.get(name)};\n\n\t\t\tfor (let i = Dex.gen - 1; i >= this.gen; i--) {\n\t\t\t\tconst table = window.BattleTeambuilderTable[`gen${i}`];\n\t\t\t\tif (id in table.overrideAbilityData) {\n\t\t\t\t\tObject.assign(data, table.overrideAbilityData[id]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this.modid !== `gen${this.gen}`) {\n\t\t\t\tconst table = window.BattleTeambuilderTable[this.modid];\n\t\t\t\tif (id in table.overrideAbilityData) {\n\t\t\t\t\tObject.assign(data, table.overrideAbilityData[id]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst ability = new Ability(id, name, data);\n\t\t\tthis.cache.Abilities[id] = ability;\n\t\t\treturn ability;\n\t\t},\n\t};\n\n\tspecies = {\n\t\tget: (name: string): Species => {\n\t\t\tlet id = toID(name);\n\t\t\tif (window.BattleAliases && id in BattleAliases) {\n\t\t\t\tname = BattleAliases[id];\n\t\t\t\tid = toID(name);\n\t\t\t}\n\t\t\tif (this.cache.Species.hasOwnProperty(id)) return this.cache.Species[id];\n\n\t\t\tlet data = {...Dex.species.get(name)};\n\n\t\t\tfor (let i = Dex.gen - 1; i >= this.gen; i--) {\n\t\t\t\tconst table = window.BattleTeambuilderTable[`gen${i}`];\n\t\t\t\tif (id in table.overrideSpeciesData) {\n\t\t\t\t\tObject.assign(data, table.overrideSpeciesData[id]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this.modid !== `gen${this.gen}`) {\n\t\t\t\tconst table = window.BattleTeambuilderTable[this.modid];\n\t\t\t\tif (id in table.overrideSpeciesData) {\n\t\t\t\t\tObject.assign(data, table.overrideSpeciesData[id]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this.gen < 3 || this.modid === 'gen7letsgo') {\n\t\t\t\tdata.abilities = {0: \"No Ability\"};\n\t\t\t}\n\n\t\t\tconst table = window.BattleTeambuilderTable[this.modid];\n\t\t\tif (id in table.overrideTier) data.tier = table.overrideTier[id];\n\t\t\tif (!data.tier && id.slice(-5) === 'totem') {\n\t\t\t\tdata.tier = this.species.get(id.slice(0, -5)).tier;\n\t\t\t}\n\t\t\tif (!data.tier && data.baseSpecies && toID(data.baseSpecies) !== id) {\n\t\t\t\tdata.tier = this.species.get(data.baseSpecies).tier;\n\t\t\t}\n\t\t\tif (data.gen > this.gen) data.tier = 'Illegal';\n\n\t\t\tconst species = new Species(id, name, data);\n\t\t\tthis.cache.Species[id] = species;\n\t\t\treturn species;\n\t\t},\n\t};\n\n\ttypes = {\n\t\tget: (name: string): Effect => {\n\t\t\tconst id = toID(name) as ID;\n\t\t\tname = id.substr(0, 1).toUpperCase() + id.substr(1);\n\n\t\t\tif (this.cache.Types.hasOwnProperty(id)) return this.cache.Types[id];\n\n\t\t\tlet data = {...Dex.types.get(name)};\n\n\t\t\tfor (let i = 7; i >= this.gen; i--) {\n\t\t\t\tconst table = window.BattleTeambuilderTable['gen' + i];\n\t\t\t\tif (id in table.removeType) {\n\t\t\t\t\tdata.exists = false;\n\t\t\t\t\t// don't bother correcting its attributes given it doesn't exist\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (id in table.overrideTypeChart) {\n\t\t\t\t\tdata = {...data, ...table.overrideTypeChart[id]};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.cache.Types[id] = data;\n\t\t\treturn data;\n\t\t},\n\t};\n\n\tgetPokeballs() {\n\t\tif (this.pokeballs) return this.pokeballs;\n\t\tthis.pokeballs = [];\n\t\tif (!window.BattleItems) window.BattleItems = {};\n\t\tfor (const data of Object.values(window.BattleItems) as AnyObject[]) {\n\t\t\tif (data.gen && data.gen > this.gen) continue;\n\t\t\tif (!data.isPokeball) continue;\n\t\t\tthis.pokeballs.push(data.name);\n\t\t}\n\t\treturn this.pokeballs;\n\t}\n}\n\nif (typeof require === 'function') {\n\t// in Node\n\t(global as any).Dex = Dex;\n\t(global as any).toID = toID;\n}\n"],"file":"battle-dex.js"}