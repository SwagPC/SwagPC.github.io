{"version":3,"sources":["../src/panel-ladder.tsx"],"names":["LadderRoom","classType","format","id","split","notice","searchValue","lastSearch","loading","error","ladderData","setNotice","update","setSearchValue","setLastSearch","setLoading","setError","message","setLadderData","requestLadderData","PS","teams","usesLocalLadder","send","toID","undefined","Net","get","query","server","output","prefix","then","PSRoom","LadderFormat","props","room","changeSearch","e","currentTarget","value","submitSearch","preventDefault","RenderHeader","BattleLog","escapeFormat","escapeHTML","RenderSearch","RenderFormat","BattleFormats","LadderPanel","componentDidMount","subscriptions","push","subscribe","response","Error","forceUpdate","render","PSRoomPanel","Notice","BattleFormatList","currentSection","sections","formats","Object","entries","key","rated","searchShow","section","length","ShowFormatList","Config","routes","users","roomTypes","Model","Component","updateRoomTypes"],"mappings":"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","sourcesContent":["/**\n * Ladder Panel\n *\n * Panel for ladder formats and associated ladder tables.\n *\n * @author Adam Tran <aviettran@gmail.com>\n * @license MIT\n */\n\nclass LadderRoom extends PSRoom {\n\treadonly classType: string = 'ladder';\n\treadonly format?: string = this.id.split('-')[1];\n\tnotice?: string;\n\tsearchValue: string = '';\n\tlastSearch: string = '';\n\tloading: boolean = false;\n\terror?: string;\n\tladderData?: string;\n\n\tsetNotice = (notice: string) => {\n\t\tthis.notice = notice;\n\t\tthis.update(null);\n\t};\n\tsetSearchValue = (searchValue: string) => {\n\t\tthis.searchValue = searchValue;\n\t\tthis.update(null);\n\t};\n\tsetLastSearch = (lastSearch: string) => {\n\t\tthis.lastSearch = lastSearch;\n\t\tthis.update(null);\n\t};\n\tsetLoading = (loading: boolean) => {\n\t\tthis.loading = loading;\n\t\tthis.update(null);\n\t};\n\tsetError = (error: Error) => {\n\t\tthis.loading = false;\n\t\tthis.error = error.message;\n\t\tthis.update(null);\n\t};\n\tsetLadderData = (ladderData: string | undefined) => {\n\t\tthis.loading = false;\n\t\tthis.ladderData = ladderData;\n\t\tthis.update(null);\n\t};\n\trequestLadderData = (searchValue?: string) => {\n\t\tconst { teams } = PS;\n\t\tif (teams.usesLocalLadder) {\n\t\t\tthis.send(`/cmd laddertop ${this.format} ${toID(this.searchValue)}`);\n\t\t} else if (this.format !== undefined) {\n\t\t\tNet('/ladder.php')\n\t\t\t\t.get({\n\t\t\t\t\tquery: {\n\t\t\t\t\t\tformat: this.format,\n\t\t\t\t\t\tserver: PS.server.id,\n\t\t\t\t\t\toutput: 'html',\n\t\t\t\t\t\tprefix: toID(searchValue),\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t\t.then(this.setLadderData)\n\t\t\t\t.catch(this.setError);\n\t\t}\n\t\tthis.setLoading(true);\n\t};\n}\n\nfunction LadderFormat(props: {room: LadderRoom}) {\n\tconst {room} = props;\n\tconst {\n\t\tformat, searchValue, lastSearch, loading, error, ladderData,\n\t\tsetSearchValue, setLastSearch, requestLadderData,\n\t} = room;\n\tif (format === undefined) return null;\n\n\tconst changeSearch = (e: Event) => {\n\t\tsetSearchValue((e.currentTarget as HTMLInputElement).value);\n\t};\n\tconst submitSearch = (e: Event) => {\n\t\te.preventDefault();\n\t\tsetLastSearch(room.searchValue);\n\t\trequestLadderData(room.searchValue);\n\t};\n\tconst RenderHeader = () => {\n\t\tif (!PS.teams.usesLocalLadder) {\n\t\t\treturn <h3>\n\t\t\t\t{BattleLog.escapeFormat(format)} Top{\" \"}\n\t\t\t\t{BattleLog.escapeHTML(lastSearch ? `- '${lastSearch}'` : \"500\")}\n\t\t\t</h3>;\n\t\t}\n\t\treturn null;\n\t};\n\tconst RenderSearch = () => {\n\t\tif (!PS.teams.usesLocalLadder) {\n\t\t\treturn <form class=\"search\" onSubmit={submitSearch}>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tname=\"searchValue\"\n\t\t\t\t\tclass=\"textbox searchinput\"\n\t\t\t\t\tvalue={BattleLog.escapeHTML(searchValue)}\n\t\t\t\t\tplaceholder=\"username prefix\"\n\t\t\t\t\tonChange={changeSearch}\n\t\t\t\t/>\n\t\t\t\t<button type=\"submit\"> Search</button>\n\t\t\t</form>;\n\t\t}\n\t\treturn null;\n\t};\n\tconst RenderFormat = () => {\n\t\tif (loading || !BattleFormats) {\n\t\t\treturn <p>Loading...</p>;\n\t\t} else if (error !== undefined) {\n\t\t\treturn <p>Error: {error}</p>;\n\t\t} else if (BattleFormats[format] === undefined) {\n\t\t\treturn <p>Format {format} not found.</p>;\n\t\t} else if (ladderData === undefined) {\n\t\t\treturn null;\n\t\t}\n\t\treturn <>\n\t\t\t<p>\n\t\t\t\t<button class=\"button\" data-href=\"ladder\" data-target=\"replace\" >\n\t\t\t\t\t<i class=\"fa fa-refresh\"></i> Refresh\n\t\t\t\t</button>\n\t\t\t\t<RenderSearch/>\n\t\t\t</p>\n\t\t\t<RenderHeader/>\n\t\t\t<SanitizedHTML>{ladderData}</SanitizedHTML>\n\t\t</>;\n\t};\n\treturn <div class=\"ladder pad\">\n\t\t<p>\n\t\t<button class=\"button\" data-href=\"ladder\" data-target=\"replace\">\n\t\t\t\t<i class=\"fa fa-chevron-left\"></i> Format List\n\t\t\t</button>\n\t\t</p>\n\t\t<RenderFormat />\n\t</div>;\n}\n\nclass LadderPanel extends PSRoomPanel<LadderRoom> {\n\tcomponentDidMount() {\n\t\tconst {room} = this.props;\n\t\t// Request ladder data either on mount or after BattleFormats are loaded\n\t\tif (BattleFormats && room.format !== undefined) room.requestLadderData();\n\t\tthis.subscriptions.push(\n\t\t\troom.subscribe((response: any) => {\n\t\t\t\tif (response) {\n\t\t\t\t\tconst [format, ladderData] = response;\n\t\t\t\t\tif (room.format === format) {\n\t\t\t\t\t\tif (!ladderData) {\n\t\t\t\t\t\t\troom.setError(new Error('No data returned from server.'));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\troom.setLadderData(ladderData);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.forceUpdate();\n\t\t\t})\n\t\t);\n\t\tthis.subscriptions.push(\n\t\t\tPS.teams.subscribe(() => {\n\t\t\t\tif (room.format !== undefined) room.requestLadderData();\n\t\t\t\tthis.forceUpdate();\n\t\t\t})\n\t\t);\n\t}\n\tstatic Notice = (props: {notice: string | undefined}) => {\n\t\tconst {notice} = props;\n\t\tif (notice) {\n\t\t\treturn (\n\t\t\t\t<p>\n\t\t\t\t\t<strong style=\"color:red\">{notice}</strong>\n\t\t\t\t</p>\n\t\t\t);\n\t\t}\n\t\treturn null;\n\t};\n\tstatic BattleFormatList = () => {\n\t\tif (!BattleFormats) {\n\t\t\treturn <p>Loading...</p>;\n\t\t}\n\t\tlet currentSection: string = \"\";\n\t\tlet sections: JSX.Element[] = [];\n\t\tlet formats: JSX.Element[] = [];\n\t\tfor (const [key, format] of Object.entries(BattleFormats)) {\n\t\t\tif (!format.rated || !format.searchShow) continue;\n\t\t\tif (format.section !== currentSection) {\n\t\t\t\tif (formats.length > 0) {\n\t\t\t\t\tsections.push(<preact.Fragment key={currentSection}>\n\t\t\t\t\t\t<h3>{currentSection}</h3>\n\t\t\t\t\t\t<ul style=\"list-style:none;margin:0;padding:0\">\n\t\t\t\t\t\t\t{formats}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</preact.Fragment>);\n\t\t\t\t\tformats = [];\n\t\t\t\t}\n\t\t\t\tcurrentSection = format.section;\n\t\t\t}\n\t\t\tformats.push(\n\t\t\t\t<li key={key} style=\"margin:5px\">\n\t\t\t\t\t<button\n\t\t\t\t\t\tname=\"joinRoom\"\n\t\t\t\t\t\tvalue={`ladder-${key}`}\n\t\t\t\t\t\tclass=\"button\"\n\t\t\t\t\t\tstyle=\"width:320px;height:30px;text-align:left;font:12pt Verdana\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{BattleLog.escapeFormat(format.id)}\n\t\t\t\t\t</button>\n\t\t\t\t</li>\n\t\t\t);\n\t\t}\n\t\treturn <>{sections}</>;\n\t};\n\tstatic ShowFormatList = (props: {room: LadderRoom}) => {\n\t\tconst {room} = props;\n\t\treturn <>\n\t\t\t<p>\n\t\t\t\t<a class=\"button\" href={`/${Config.routes.users}/`} target=\"_blank\">\n\t\t\t\t\tLook up a specific user's rating\n\t\t\t\t</a>\n\t\t\t</p>\n\t\t\t<LadderPanel.Notice notice={room.notice} />\n\t\t\t<p>\n\t\t\t\t<button name=\"joinRoom\" value=\"view-ladderhelp\" class=\"button\">\n\t\t\t\t\t<i class=\"fa fa-info-circle\"></i> How the ladder works\n\t\t\t\t</button>\n\t\t\t</p>\n\t\t\t<LadderPanel.BattleFormatList />\n\t\t</>;\n\t};\n\trender() {\n\t\tconst {room} = this.props;\n\t\treturn <PSPanelWrapper room={room} scrollable>\n\t\t\t<div class=\"ladder pad\">\n\t\t\t\t{room.format === undefined && (\n\t\t\t\t\t<LadderPanel.ShowFormatList room={room} />\n\t\t\t\t)}\n\t\t\t\t{room.format !== undefined && <LadderFormat room={room} />}\n\t\t\t</div>\n\t\t</PSPanelWrapper>;\n\t}\n}\n\nPS.roomTypes['ladder'] = {\n\tModel: LadderRoom,\n\tComponent: LadderPanel,\n};\nPS.updateRoomTypes();\n"],"file":"panel-ladder.js"}